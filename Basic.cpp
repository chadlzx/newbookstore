#include<bits/stdc++.h>

using namespace std;
/*
author: chad 闂傚倸鍊搁崐椋庣矆娓氣偓楠炴牠顢曢敂钘夋濡炪倖鐗滈崑娑㈡偪椤曗偓閹綊骞侀幒鎴濐瀴閻庤娲橀悡锟犲蓟閿熺姴绀冮柨婵嗘噸婢规洘绻?
student id: 518030910426 
class type: class A
class id: F1803017
*/

/*
闂傚倸鍊搁崐宄懊归崶褜娴栭柕濞炬櫆閸ゅ嫰鏌涢幘鑼妽鐎规洖寮剁换婵嬫濞戞艾鈪辩紓浣插亾濠电姴娲﹂崐鐢告煥濠靛棝顎楀褜鍨伴埞鎴︻敍濮樸儱浠梺鍝勭灱閸犳捇骞夐幘顔肩妞ゆ劏鎳ｉ弴銏♀拺闁告稑锕ら悞褰掓煕鐎ｎ偅宕屾慨濠勭帛閹峰懐绮电€ｎ亝鐣伴梻浣告啞閹歌顫濋妸鈺佺闁靛繈鍊曢獮銏＄箾閹寸偟鎳冮柛鎾诡潐娣囧﹪濡惰箛鏇炲煂闂佸摜鍣ラ崹璺侯嚕?
婵犵數濮烽。钘壩ｉ崨鏉戠；闁规崘娉涚欢銈呂旈敐鍛殲闁稿顑夐弻锟犲炊閵夈儳浠奸梺绋胯閸斿秶鎹㈠☉銏犵婵炲棗绻掓禒楣冩⒑閸濆嫭濯奸柛鎾跺枛楠炲啫顫滈埀顒勫箖濞嗘垶宕夊〒姘煎灡椤ュ秹姊绘担绋挎毐闁搞垺鐓￠幃褑绠涢弴鐕佹綗闂佸湱鍎ら幐鍝ユ閻愭祴鏀介柣妯诲絻閻濇棃鏌ㄥ┑鍡╂Ч闁搞倕顦甸弻宥夊传閸曨偅娈滈梺绋款儐閹告悂鍩㈤幘璇插瀭妞ゆ梻鏅禍顏嗙磽閸屾瑨鍏岀紒顕呭灦瀹曟繂鈻庨幘婢勩儵鏌涘☉銏犱喊婵℃彃銈稿娲偡閺夋寧些闂佺娅曢敋妞ゆ洩缍侀獮姗€顢欓挊澶嗗亾婵犳碍鐓曢柍鈺佸枤閻掓椽鏌ｉ弬鍨倯闁抽攱鍨块弻銈嗘叏閹邦兘鍋撻弴鐔侯浄婵犲﹤瀚换鍡樸亜閹扳晛鐒洪柛銈囧枑娣?
	闂傚倸鍊搁崐鐑芥嚄閸洍鈧箓宕奸姀鈥冲簥闂佽澹嗘晶妤呭磻鐎ｎ喗鐓欓梺顓ㄧ畱閺嬬喓鈧娲栧鑸电┍婵犲浂鏁嶆慨姗嗗墯閸婎垶姊虹粙娆惧剱闁挎洏鍨介獮鍐ㄎ旈崨顓熷祶濡炪倖鎸鹃崰搴＄暆缁斿畳闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熸潏楣冩闁稿孩顨呴湁闁挎繂鐗勯埀顑藉亾闂佺顑嗛幐鎼侊綖濠靛唯闁靛／鍌滅？闂傚倷绶氶埀顒傚仜閼活垱鏅堕婊呯＜閻庯綆鍋勫ù顕€鏌℃担鍓插剰闁宠鍨块幃鈺咁敃椤厼顥氶梻鍌欒兌缁垳鍠婂澶樻晢闁挎洖绐嘺nd.txt,闂傚倸鍊搁崐鐑芥嚄閸洖纾块柣銏㈩焾閻ょ偓绻涢幋娆忕仾闁稿鍊濋弻鏇熺箾瑜嶇€氼厼鈻撴导瀛樼厽閹兼番鍔嶅☉褔鏌熺拠褏纾块柍褜鍓氱喊宥呯暆閹间礁绠栫憸鐗堝笒閻愬﹪鏌曟繛鍨姢缂佷線顥撶槐鎾存媴閻熸壆绁峰┑鐐点€嬬换婵嗩嚕鐠囨祴妲堟俊顖炴敱椤秴鈹戦悙鍙夘棞缂佺粯甯楃粋宥嗗鐎涙ǚ鎷虹紒缁㈠幖閹虫劙宕奸鍫熺厱濠电姴鍟扮粻鏍?
	闂傚倸鍊搁崐椋庣矆娓氣偓瀹曘儳鈧綆鍠楅崕鎴犳喐閻楀牆绗掔痪鎯ф健閺岀喎鈻撻崹顔界亾缂備胶濮甸弻銊┾€︾捄銊﹀磯闁告繂瀚峰Σ鐢告⒑缁嬫鍎愰柟鍛婃倐閸┿儲寰勬繛鐐€哄銈嗘寙閸屾粎娉块梻浣瑰濞插繘宕规禒瀣ㄢ偓渚€寮崼婵嬪敹闂佺粯鏌ㄩ幉锟犳偟椤愶附鐓熼幖绮光偓鍐茶緟闂佺顑嗛幑鍥蓟濞戙垹绠涙い鎾跺仜婵垽姊洪崫鍕闁告ê澧藉Σ鎰板箻鐠囪尙锛滃┑顔斤供閸撴岸鎮橀幘缁樷拺闁告縿鍎辨牎閻庡厜鍋撻柟闂寸閺勩儵鏌曡箛瀣偓鏇犵矆閸岀偞鐓曢煫鍥ㄦ礀鐢爼鏌涢弬鎸庡殗婵☆偄鎳橀、鏇㈠閳ユ剚妲遍梻浣告贡椤牓鈥﹀畡鎵殾濞村吋娼欏婵嬫倵濞戞瑯鐒介柛妯圭矙濮婃椽骞愭惔锝囩暤闂佺娅曢崝娆撳箖閻愬搫宸濆┑鐘插椤旀洟姊婚崒姘偓鐟邦焽濞嗗繒鏆ら柛鈩冪憿閸嬫挾鎲撮崟顒€顦╂繛瀛樼矌閸嬬偟绮嬮幒妤佹櫇闁稿本绋戦埀顒勬敱閵囧嫰骞掗幋婵冨亾閹间焦瀚冮悗锝庡枟閳锋帡鏌涚仦鍓ф噮閻犳劒鍗抽弻娑氣偓锝庝簼閸ｈ銇勯锝囩疄濠碘剝鎮傞崺鈩冩媴閻戞鍙勫┑锛勫亼閸婃牠宕濊濮婁粙宕熼鈧径鎰唶闁绘梻绻濈花璇差渻閵堝棗濮﹂柛瀣瀵悂濡堕崶鈺冿紲闂侀€炲苯澧寸€规洜鍠栭、娑樷槈濮橆剙绠哄┑锛勫亼閸娿倝宕戦幒妤€绀堟繛鍡樺姃缁诲棗霉閻樺樊鍎愰柣鎾存礋閺屽秹宕崟顐熷亾鐠囪铏光偓鐢电《閸嬫挾鎲撮崟顒傗敍缂備焦褰冨锟犲春閳ь剚銇勯幒鎴姛缂佸娼ч湁婵犲﹤瀚峰▓婊呪偓瑙勬礃閸ㄦ寧淇婇幖浣哥厸闁稿本绮屽铏節閻㈤潧浠﹂柛銊ョ埣閺佸啴鍩℃担鍕剁秮瀹曞ジ寮撮悢鍝勫笚?
缂傚倸鍊搁崐鎼佸磹閻戣姤鍊块柨鏇炲€堕埀顒€鍟崇粻娑樷槈濡⒈妲繝鐢靛仦閸ㄨ泛顫濋妸鈺佺婵鍩栭悡娑橆熆鐠轰警鍎忛柣蹇撶Ч閺岋紕鈧綆浜崣鍕煛鐏炵晫效濠碉紕鍏樻俊鎼佹晜閹勯敪闂傚倷鑳堕…鍫⑩偓娑掓櫊閹兘鍩￠崨顓℃憰濠电偞鍨崹鍦尵瀹ュ鐓欓悗鐢殿焾瀛濋柣銏╁灛閸斿海妲愰幘瀛樺濞寸姴顑呴幗鐢电磽娴ｇ瓔鍤欓柣妤€妫濋幃鎯х暋闁附鍍靛銈嗗灱婵倝锝炲鍛斀闁宠棄妫楅悘銉╂煕鐎ｎ偄濮堢€?user 闂傚倸鍊搁崐椋庣矆娓氣偓楠炴牠顢曢敃鈧壕鍦磼鐎ｎ偓绱╂繛宸簼閺呮煡鏌涘☉鍙樼凹闁诲骸顭峰娲濞戞氨鐤勯梺绋匡攻閻楃姴顕ｉ弻銉晢闁告洦鍓欓埀顒€鐖奸弻锝夊箛椤栨氨鍘銈冨劚椤︾敻寮婚敐鍫㈢杸闁靛／鍜冪吹闂備線鈧偛鑻晶浼存煕鐎ｅ墎绉€规洘鍔曢埥澶婎潨閸℃顩梻渚€娼ц墝闁哄懏绋撶划鍫熷緞閹邦厾鍘介梺鍝勫€搁悘婵嬪箖閹达附鐓曢幖绮光偓鎰佸妷闂侀潧娲ょ€氭澘顕ｉ鈧崺鈧い鎺戝閺佸嫭绻涢崱妯诲碍閻熸瑱绠撻弻娑樼暆閳ь剟宕戦悙鐑樺亗闁哄洨鍠嶇换鍡涙煏閸繂顏柛鏂跨Ф缁辨帡鍩€椤掑嫬绀冮柍琛″亾缂佽妫欓妵鍕箛椤斿吋鐎惧┑鐐叉噹閻楀繒妲愰幒妤佸亹鐎规洖娲犲Σ鍫ユ煣缂佹澧甸柡灞剧洴楠炲洭顢橀悙鎻捫戦梻浣筋嚃閸犳洜娆㈠顒夋綎婵炲樊浜濋崵鎺楁煏閸繃鍣哥紒顔挎硾閳规垿鍩ラ崱妞剧凹闂佺儵鏅╅崹鍫曠嵁閸愵煁娲敂閸曨収鍚呴梻浣瑰濞插秹宕戦幘缈犵箚妞ゆ劧缍囬懓鍧楁煛鐏炲墽娲村┑锛勫厴椤㈡盯鎮欓幖顓涘亾瀹ュ拋娓婚柕鍫濇婵啰绱掗鐣屾噰鐎殿喖顭锋俊鎼佸Ψ閵忊槅娼旀繝纰樻閸ㄤ即鎮樺┑瀣垫晜妞ゆ挶鍨洪埛鎴︽煙閼测晛浠滃┑鈥炽偢閺岋綀绠涢弬鍨懙濡ょ姷鍋涢悧鎾翠繆濮濆矈妲烽梺绋款儐閹瑰洭寮幇顓熷劅闁炽儴灏欓崙褰掓⒒娴ｈ姤顥夐柛濠冩倐椤㈡牗寰勯幇顒冩憰闂佹枼鏅涢崯顖涘垔閹绢喗鐓熼柣鏃傚帶娴滀即鏌嶈閸撴氨鍒掓惔锝嗩潟闁圭儤鎸绘刊鎾煕濠靛嫬鍔滈柟鑼跺亹缁?
	user 闂傚倸鍊搁崐椋庣矆娓氣偓楠炴牠顢曢敃鈧壕褰掓煟閻旂厧浜伴柣鏂挎閹便劌顪冪拠韫闁诲氦顫夊ú鏍礊婵犲倻鏆﹂柨鐔哄У閸婂鏌涢埄鍐炬畷闁伙綀鍋愮槐鎾诲磼濞嗘劗銈板┑鐐叉嫅缂嶄線鐛幇顔剧处闁?闂傚倸鍊搁崐鐑芥倿閿曗偓椤啴宕归鍛姺闂佺鍕垫當缂佲偓婢跺备鍋撻獮鍨姎妞わ富鍨跺浼村Ψ閿斿墽顔曢梺鐟扮摠閻熴儵鎮橀埡鍛厽妞ゆ挾鍣ュ▓婊堟煙椤旂瓔娈滈柡浣瑰姈閹柨鈹戦崼鐔割唫闂傚倷鑳堕…鍫ヮ敄閸愵喖绀夐柟杈剧畱閽冪喖鏌曟繛鍨姉婵℃彃鐗婇幈銊ノ旈埀顒€螞濞嗘帒鈧挳姊?
闂傚倸鍊峰ù鍥敋瑜嶉湁闁绘垼妫勯弸浣糕攽閻樺疇澹橀柣鎺戠仛閵囧嫰骞掑鍫濆帯闂侀潧妫欑敮锟犲蓟閵堝牄浜归柟鐑樻⒒閺嗩偊姊洪崫鍕拱缂佸鍨块敐鐐测攽鐎ｅ灚鏅㈤梺绋挎湰閸戝綊寮堕崫銉х＝濞达綁缂氬鎼佹煕濡亽鍋㈤柟顔哄劜缁轰粙宕妷銉с偊闂備線鈧偛鑻晶浼存煙閼碱剦鐒鹃柣锝嗙箞閸┾偓妞ゆ帒鍊搁崹婵囥亜閹惧崬鐏╃痪鎯с偢閺岋綁骞囬鍌涙喖濠电偛鎳忛悧鐘诲蓟閿濆牏鐤€闁哄洨鍋樼划鑸电節閳封偓閸℃﹩妫勯柛妤呬憾閺屾洘绻濊箛鎿冩喘缂備胶濞€缁犳牠寮诲☉銏″亹闁告侗鍠楃欢鏌ユ煃瑜滈崜姘躲€冮崼銏☆潟婵炲棙鍔楃弧鈧┑顔斤供閸橀箖宕㈤柆宥嗏拺闁荤喖鍋婇崵鐔封攽椤旂厧妲婚崡閬嶆煟閵娿垹浜緑alid\n

闂傚倸鍊搁崐鐑芥倿閿曗偓椤啴宕归鍛姺闂佺鍕垫當缂佲偓婢跺备鍋撻獮鍨姎妞わ富鍨跺浼村Ψ閿斿墽顔曢梺鐟扮摠閻熴儵鎮橀埡鍐＜闁绘瑦鐟ュú锕傛偂閺囥垺鐓欏ù鐓庣摠濞懷囨煛鐎ｎ剙鏋戦柕鍥у閹棃濮€閵忊€虫珣闂備礁鐤囧Λ鍕囬悽鍝ュ祦婵せ鍋撴鐐叉处閹峰懘宕崟顐ょР缂傚倸鍊搁崐宄懊归崶銊ｄ粓闁告縿鍎插畷鏌ユ煕椤愮姴鍔氱紒鐘靛█閺岀喖骞嗚閹界姴鈹戦娑欏唉闁诡喖鍢查埢搴ょ疀閹垮啩绱戦梻浣告啞閸╁﹦鎹㈠┑鍡╂綎婵炲樊浜滅粻浼村箹鏉堝墽宀涙俊鎻掔墦濮婃椽宕楅崗绗轰户闂佹悶鍔岄悥濂告偘椤旇棄绶為柟閭﹀墰椤︺劑鎮楅悷鏉款棌闁哥姵鐗犲鏌ユ偐缂佹ǚ鎷洪梻鍌氱墛娓氭螣閸儲鐓曢柕濞垮劤閿涘秶绱掗鑲╁鐎垫澘瀚换婵囨償閵忕姷妲ｉ梻鍌欑窔濞佳囨偋閸℃あ娑樜旈崨顓狀槷闂侀潧鐗嗗Λ搴㈢濠婂牊鐓欓柟顖嗗拑绱炵紓浣割槹濡炰粙寮婚埄鍐╁闁告縿鍎涢妶鍚ゅ綊鎮崨顖滄殼闂佽鍠楅悷鈺呫€佸Δ鍛劦妞ゆ帒鍊归～鏇㈡煥閺囩偛鈧綊鍩涢幋锔藉仯閻庯綆浜妤佷繆椤愵偄寮€规洟娼ч埢搴ㄥ箣閻樼绱?7310

load [file] #7 闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鍨鹃幇浣圭稁缂傚倷鐒﹁摫闁告瑥绻橀弻鐔碱敍閿濆洣姹?
exit #0 闂傚倸鍊搁崐鎼佸磹妞嬪孩顐介柨鐔哄Т绾惧鏌嶈閸撶喖寮诲☉姘ｅ亾閿濆骸浜濈€规洖鐭傞弻?
su [user] [passwd] #0 闂傚倸鍊搁崐宄懊归崶顒佸剭妞ゆ劧绠戦獮銏ゆ煃鏉炴壆鍔嶆い鏂垮缁?
logout #1  闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁撻悩鍐蹭画闂佹寧姊婚崑鎾剁不閹烘鈷戦柤濮愬€曟牎闂佸憡姊归〃濠傜暦娴兼潙鍐€鐟滄粓宕甸弴銏＄厽闁靛繒濮撮ˉ蹇涙煛娴ｇ鈧潡寮诲☉銏犵労闁告劕銇樼欢鍨箾鐎电顎岄柛锝忕秮楠?
useradd [user闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晞灏欑槐鎺楊敍濠婂懎顣?[passwd] [7/3/1] [name] #3闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜姗嗘畷闁搞倕鑻灃闁挎繂鎳庨獮妤呮煟閹达絾顥夌紒鈧崘鈹夸簻闁哄啫娲ゆ禍瑙勩亜閿旇娅嶆慨濠呮缁辨帒顫滈崱娆忓Ъ濠电偛鐡ㄧ划鐘诲礈閻旂鈧線寮崼婵堫攨闂佺粯鍔忛弲婊堬綖瀹ュ鈷戦柣鐔稿娴犮垽鏌涢悢鍙夋珖闁奸缚椴哥缓浠嬪川婵犲倵鍋撻悽鍛婄厱妞ゎ厽鍨垫禍婵嬫煟閵婏箑鐏撮柡灞界Х椤т線鏌涢幘瀵哥疄闁挎繄鍋炲鍕沪閼恒儳鈧娊鎮楅獮鍨姎闁瑰嘲顑夐幃鐐寸鐎ｎ偆鍘卞銈嗗姉婵挳宕濆鍫熺厓闂佸灝顑嗛ˉ鍫ユ煛瀹€鈧崰鏍蓟閸ヮ剚鏅濋柍褜鍓熷鎼佹偄閸忚偐鍘介梺鎸庣箓椤︻噣骞夋ィ鍐╃厸鐎光偓鐎ｎ剛袦闂佹寧绻勯崑銈夈€佸Δ鍛劦妞ゆ帊妞掔换鍡椕归悩宸剱闁绘挻娲熼弻宥夊传閸曨偀鍋撶拠瑁佹椽骞橀鐣屽幐婵炶揪绲介幗婊嗗€村┑鐐差嚟婵绮婚幘璇茬疇闁哄稁鍘奸悡娑㈡煕閹般劍娅呴柡瀣崌濮婂宕掑▎鎺戝帯闂佸憡顭嗛崶銊ヤ痪闂佹悶鍎洪悘娑樷槈閵忕姷顦板銈嗙墬閼归箖鎮楅銏♀拺闁告稑顭▓姗€鏌涙惔銏犲鐎规洜鏁诲畷濂稿Ψ閵壯囩崜闂備胶绮崝鏍ь焽濞嗘拲澶屸偓锝庡枟閻撶喖鏌ｉ弬鎸庢喐缂佺姷鍋ら弻鐔碱敊缁涘鍔哥紓浣哄У閻╊垶鐛鈧畷婊勭瑹閸パ勫€涚紓鍌氬€搁崐椋庢閿熺姵鍋傞柛顐犲劚缁€鍫ユ煟閺冨倸甯剁紒鐘靛У缁绘盯骞嬪▎蹇曞姶闂佽桨绀侀崐鍧楀蓟濞戙垹鍗抽柕濞垮劚缁犲姊烘导娆戠ɑ濠电偛锕ら～蹇撁洪鍕炊闂佸憡娲栭悘姘辩懅闂傚倷绀侀幗婊堝窗閹邦剦鐒芥繛鍡樻尨閳ь剚鐗楃换婵嬪磻椤栨稒銇濇い銏℃瀹曘劑顢橀悙宸闂傚倸鍊风粈渚€骞夐垾瓒佹椽鏁冮崒姘辩崶闂佸搫绋侀崢鏃堝炊椤掆偓閻撴盯鏌涘☉鍗炴灓闁?
register [user闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晞灏欑槐鎺楊敍濠婂懎顣?[passwd] [name] #0闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜妯荤叆闁哄鐗忛埀顒€绠嶉崕閬嵥囬鐐插嚑濞撴埃鍋撻柡宀嬬秮楠炲洭顢楁担鐟板壍缂傚倷璁查崑鎾绘煕閹伴潧鏋熼柛濠傜埣閺岋綁骞囬娑氥€愭繛瀛樼矎椤濡甸崟顔剧杸闁规儳鐤囬崺鐐烘⒑鐎圭姵顥夋い锔炬暬閻涱喖鈻庨幘宕囶槰閻熸粌绻橀幆鍕償閵婏腹鎷哄┑顔炬嚀濞层倝鎮炲ú顏呯厱閻庯綆浜峰銉︺亜閺囶亞绉€规洖缍婇、鏇㈠閵忋垻宓侀梻浣侯攰婢瑰牓骞撻鍡楃筏闁秆勵殢閺佸﹪鏌熼柇锕€骞樼紒鐘荤畺閹鈽夊▎妯煎姺闂佹椿鍘奸鍥╂閹烘柡鍋撻敐搴′簻濠殿喖鐗忕槐鎺戠暆閸愵喖鎽电紓浣虹帛缁诲牆鐣烽幆閭︽Ь闂佷紮绲介崯鍧椻€旈崘顔嘉ч柛鈩冪懃椤呯磽娓氬洤鏋涚紒澶婄秺楠炲啯銈ｉ崘鈺冨姸閻庡箍鍎卞Λ娑㈠储閸涘﹦绡€闁靛骏绲剧涵楣冩煥閺囨ê鈧繂顕ｉ幎鑺ユ櫜闁糕剝娲滅粻?闂傚倸鍊搁崐鐑芥倿閿曗偓椤啴宕归鍛姺闂佺鍕垫當缂佲偓婢跺备鍋撻獮鍨姎妞わ富鍨跺?
delete [user闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晞灏欑槐鎺楊敍濠婂懎顣?#7闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜姗嗘畷闁搞倕鑻灃闁挎繂鎳庨弳娆撴煕閵娿儱鈧骞夐幖浣瑰亱闁割偅绻勯悷鏌ユ⒑閹惰姤鏁辨俊顐㈠暣瀵寮撮姀鐘诲敹濠电娀娼уù鍌毼涢妶澶嬧拺闁告稑顭€閹达附鍋￠柍鍝勬噹閽冪喖鏌ㄥ┑鍡╂缂傚秵鐗楅妵鍕箳閸℃ぞ澹曞┑鐘殿暯閳ь剝灏欓惌娆撴煛?
passwd [user闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晞灏欑槐鎺楊敍濠婂懎顣?[old闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晝鍏橀弻锝夊即閻樼绱歴wd(if not root)] [new闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晝鍏橀弻锝夊即閻樼绱歴wd] #1闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜姗嗘闁轰礁妫濋弻锝夋倷閻㈢鍘猼婵犵數濮烽弫鎼佸磻閻愬搫鍨傞柛顐ｆ礀缁犱即鏌涘┑鍕姢闁活厽鎹囬弻锝夋偄鐠囪尙鍔烽梺閫炲苯澧悽顖椻偓宕囨殾婵犲﹤瀚刊鎾煟閻斿搫顣兼慨锝呮搐閳规垿鎮欓懜闈涙锭缂傚倸绉崇粈渚€鈥﹂崶顒佸殥闁靛牆娲ㄩˇ顖炴⒑閸濆嫮鈻夐柛妯圭矙閹繝寮撮姀锛勫幍闂備緡鍙忕粻鎴︾嵁濮椻偓閺岀喖宕橀幓鎺濅痪婵烇絽娲ら敃顏堛€侀弴銏╂晝妞ゎ偒鍘鹃弫鏍⒒娓氣偓閳ь剛鍋涢懟顖涙櫠鐎涙绠惧ù锝呭暱閸氭ê鈽夊Ο閿嬵潔闂侀潧绻嗛埀顒€鍘栭崙鑺ョ節閻㈤潧孝闁挎洏鍊濋幃褎绻濋崶褏鏌у銈嗗笒鐎氼參宕愰崼鏇熺厽闁归偊鍨伴悡鎰亜閵夈儺妲洪柍褜鍓涢弫鍛婃櫠濡ゅ懎绠伴柟闂寸劍缁犳帡姊绘担鐟邦嚋缂佽鍊歌灋婵炴垯鍨圭粻鐘绘煕閳╁喚娈㈤柣鏂挎閹綊宕崟顒佸創濡炪倕娴氶崢浠嬨€冮妷鈺傚€风€瑰壊鍠栭崜鍫曟⒑鐠団€虫灍缂侇喗鎹囬獮濠囨倷閸濆嫀銊╂煏閸繃鎼愮紒妤嬬節濮?

[user-id] 闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁嶉崟顐㈢亰闁硅壈鎻徊璺ㄧ不閺冣偓閹便劑骞掔€ｎ亖鍋撶粻淇縲d] 闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁撻悩鍐蹭罕闂佸搫娲㈤崹鍦不閻樿绠规繛锝庡墮婵¤偐绱掗悩鍐插摵闁哄本鐩、鏇㈠Χ閸涱喚鈧偓绻涚€涙ê娈犻柛濠冪箞瀵鏁愭径濠勭杸濡炪倖妫佹慨銈呅掗崟顖涒拺閺夌偞澹嗙粣鏃傜磼閻樺磭澧电€殿喖顭烽弫鎾绘偐閼碱剦妲版俊鐐€曠换鎰偓姘嚇婵＄兘鍩￠崒婊冨笚闂佽崵鍠愰悷銉р偓姘煎枟閺呭爼鎮界喊妯轰壕婵炲牆鐏濋弸娆戠磼椤旂晫鎳囨鐐诧躬瀵粙顢橀悙闈涘箰闂備胶顭堥張顒傚垝瀹ュ應鏋旈柟闂寸劍閳锋帒霉閿濆牆袚闁靛棗鍟撮弻锝夊箳閻愮數鏆犲銈庡幖閻忔繈锝炲鍫濈劦妞ゆ帒瀚粻鏍旈敂绛嬪劌婵℃煡绠栧娲焻閻愯尪瀚板褜鍨崇槐鎺斺偓锝庡亜濞搭噣鏌曢崱妤€鏆ｇ€规洖宕埥澶娾枎韫囨挸鈷曞┑鐘垫暩婵炩偓婵炰匠鍏犳椽濡搁埡浣哄幒闂佸搫鍟悧濠囧磹閻㈠憡鐓ユ繝闈涙閸戝湱绱掗妸銉吋闁哄矉缍€缁犳盯骞欓崟顐㈩潬缂傚倷娴囨ご鍝ユ暜閿熺姷宓侀柛鈩冨嚬濡插姊哄ú鑽ゅ帨缂佽鲸娲滃Σ鎰板箳閹惧绉堕梺闈浤涢崨顖涙瘒缂傚倸鍊风粈渚€顢栭崨姝ゅ洭顢涢悜鍡樻櫍婵犻潧鍊婚…鍫ユ煁閸ヮ剚鐓冮柟顖氬簻妤犲繘鏌涢妸銊︻棄妞?婵犵數濮烽弫鎼佸磻閻愬搫鍨傞柛顐ｆ礀缁犲綊鏌嶉崫鍕偓濠氥€呴崣澶岀瘈濠电姴鍊绘晶娑㈡煕鐎ｃ劌鈧骞夊宀€鐤€闁哄洨鍋涢悘?
[name] 婵犵數濮烽弫鎼佸磻閻愬搫鍨傞柛顐ｆ礀缁犲綊鏌嶉崫鍕櫣闁稿被鍔戦弻褑绠涢幘纾嬬缂備胶濮甸弻銊┾€﹂崸妤佸殝闂傚牊绋戦～宀勬煟閻斿摜鎳曢梻鍕婵＄敻宕熼姘辩杸闂佸疇妗ㄧ拋鏌ュ磻閹捐绠涢柡澶嬪閻庮剟姊洪崨濠冨闁搞劑浜堕幃鈥斥槈濮橈絽浜炬鐐茬仢閸旀碍绻涚仦鍌氱伈闁糕斁鍋撳銈嗗坊閸嬫挻銇勯幋婵囨悙閸楅亶鏌熼柇锕€鍘撮柡鈧禒瀣厱闁靛鍨洪弶褰掓煛鐎ｎ偆澧甸柟顔筋殜閻涱噣宕归鐓庮潛闂備胶绮〃鍛崲閹扮増鍋ゆい鎾卞灪閳?婵犵數濮烽弫鎼佸磻閻愬搫鍨傞柛顐ｆ礀缁犲綊鏌嶉崫鍕偓濠氥€呴崣澶岀瘈闂傚牊渚楅崕鎰版煕鎼淬垹鐏撮柡宀嬬秮閺佹劙宕ㄩ褎校闂?0婵犵數濮烽弫鎼佸磻閻愬搫鍨傞柛顐ｆ礀缁犲綊鏌嶉崫鍕偓濠氥€呴崣澶岀瘈濠电姴鍊绘晶娑㈡煕鐎ｃ劌鈧骞夐幖浣哥睄闁割偅绻勯悿?

select [ISBN]
#3闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜妯虹仼闁哄棗妫濋弻鐔兼⒒鐎靛壊妲梺缁樺笒閻忔岸濡甸崟顖氱闁糕剝銇炴竟鏇熶繆閻愵亜鈧呪偓闈涚焸瀹曞綊宕奸弴鐐电暫闂佸憡鎸嗛崨顖ｆЦ婵＄偑鍊戦崹濠氼敄瀹勫啫鈹戦悩鍨毄闁稿鍋ゅ畷褰掑醇閺囩偟顔囨俊銈忕到閸燁偆澹曢崸妤佺厪闁割偅绻冪粈宀勬煕鐎ｎ偅宕岀€规洖缍婇、鏇㈡晲閸ヮ煈鍚囬梻鍌欑窔閳ь剛鍋涢懟顖涙櫠閸欏浜滄い鎰╁焺濡偓闂佺娅曠换鍐Χ閿濆绀冮柕濞у啫袝濠碉紕鍋戦崐鏍暜閹烘鐤い鎰剁悼椤╂煡鎮峰▎蹇擃伀缂佺娀绠栭弻娑㈩敃閵堝懏鐎婚梺璇茬箰椤曨參鍩€椤掑喚娼愭繛鍙夌墵閹儵鎮℃惔锝嗘闂佹寧绻傞ˇ顖氭暜闂備線娼чˇ顓㈠磿閸濆嫷鐒芥い鎺戝閳锋帒霉閿濆洦鍤€妞ゆ洘绮庣槐鎺斺偓锝庡亜閻忔挳鏌熼姘拱闁瑰嘲鎳愰幃浼村灳閸忓懎顥氭繝娈垮枟鑿ч柛搴ㄤ憾閹﹢顢旈崱娆戯紲闁诲函缍嗘禍璺何ｉ崨濞夸簻闁瑰墽鍋ㄩ崑銏⑩偓瑙勬磸閸旀垿銆佸☉妯锋婵炲棗绻戦悘鍫ユ⒒閸屾艾鈧娆㈠顒夌劷闁煎鍊栫€氬鏌ｉ弮鍌氬付缂佲偓婢跺备鍋撻崗澶婁壕闂佸憡娲﹂崑鍕倵椤撶儐娓婚柕鍫濇婢ч亶鏌涚€ｎ偆銆掔紒顔肩墦瀹曞崬螣閼测晩鍟庨梻浣烘嚀椤曨參宕曢幇鐗堝€块柣锝呯灱绾惧ジ鏌熼幓鎺濆剳闁伙絿鏁婚弻鐔碱敊閼测晝楔閻庤娲栭悥濂稿箠濠婂啠鏋旈幖瀛樻尭娴滅偓淇婇妶鍥х€璑闂傚倸鍊搁崐鐑芥倿閿曞倹鍎戠憸鐗堝笒缁€澶屸偓鍏夊亾闁逞屽墴閸┾偓妞ゆ帊绀侀崵顒€霉濠婂簼绨婚柣锝呭槻閳规垹鈧綆鍋勬禍婊堟⒑閸忚偐銈撮柡鍛〒缁﹪鏁冮崒娑氬幗闂佺粯顭堝畷鐢垫閻楀牏绠鹃柛婊冨暟閸掍即鏌嶇紒妯诲碍閻撱倖銇勮箛鎾村櫧闁告﹢浜跺Λ鍛搭敃閵忊€愁槱濠殿喖锕ょ紞濠傤嚕閹间礁绀嬫い鎾跺Х閿涙繈鎮楅獮鍨姎婵☆偅顨婇幃姗€鏁傞崜褏锛滈悗鍏夊亾闁告洦浜濋崰姘舵⒑缁洘娅呴悗姘緲閻ｅ嘲螣濞嗙偓鞋缂傚倷璁查崑鎾绘煃瑜滈崜鐔奉潖缂佹ɑ濯村瀣凹鐟曞棛绱撴担鍦弨缂佺姵鐗犻獮鍐偪椤栵絾鈻岄梻浣虹《閺呮繈宕戦妶鍜佸殨濞寸姴顑愰弫鍐煏閸繍妲撮柡鈧崫鍕ㄦ斀闁绘﹩鍠栭悘杈ㄧ箾婢跺娲撮柡浣稿暣閺佸倿宕滆楠炴挸顪冮妶蹇曠？妞ゃ垹妯塱fy闂傚倸鍊风粈渚€骞栭位鍥敃閿曗偓閻ょ偓绻濇繝鍌涘櫧闁活厽鐟╅弻鈥愁吋鎼粹€崇闂侀€炲苯鍘哥紒鑸靛哺閻涱喚鈧綆鍠楅崐鐑芥煟閵忋垺鏆╅柡鍡╁灡娣囧﹪鎮欓鍕ㄥ亾閺嶎厼绀夐柟杈剧畱閸ㄥ倻鎲搁悧鍫濈瑨闁?
modify 闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌＄仦璇插姎闁绘帒鐏氶妵鍕箳瀹ュ牆鍘￠梺瑙勫灊缂佸粴=[ISBN] 闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晝鍏橀弻鐔烘崉閾忕懓鎹秂=[name] 闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晜鐓￠弻锝嗘償閿濆懐浜or=[author] 闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晝鍏橀弻娑滎槻妞ゅ骸宸皁rd=[keyword] 闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晝鍏橀弻锝夊冀瑜忛埞姒梕=[price]
#3闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜姗嗘畷闁搞倕鐭傞弻鐔碱敍閸℃瀚版繛鍫涘妼椤啴濡堕崱妤冪懆闁诲孩鍑归崜鐔奉嚕閸涘﹦鐟归柍褜鍓熷濠氬焺閸愩劎绐炴繝鐢靛Т鐎氼亪鎼规惔銊︾厽闁绘浜崝宥夋煟閹垮嫮绡€鐎殿喖顭烽弫鎰緞濡粯娅嗛梻浣告啞閸旓箓宕㈡總绋垮偍闁跨喓濮甸埛鎴︽煕濠靛棗顏い銉у仱閺屾盯寮埀顒勬偡閳轰緡鍤曟い鎰╁焺閸氬鏌涢妷顖炴闁告洖鍟村娲礂閼测斂鍋為梺鍝勬噺缁诲倸宓勯棅顐㈡处濮婅崵绮绘ィ鍐╃厵閻庣數顭堟禒锕傛倶韫囷絽骞樼紒杈ㄥ笚瀵板嫮浠﹂挊澶婄闂備線娼уΛ妤呭箠濮椻偓瀵偊宕橀鑲╁姦濡炪倖甯婇悞锕€鈻嶈箛娑欌拻濞达絼璀﹂悞楣冩煛閸偄澧伴柟骞垮灲瀹曠喖顢橀悩娈挎П濠电姷鏁告慨鐢靛枈瀹ュ鍋傞柡鍥ュ灮閸欐捇鏌涢妷鎴濊嫰閸撲即姊洪崨濠冾棖缂佺姵鎹囧濠氬即閵忕姴鑰垮┑掳鍊愰崑鎾淬亜閹哄鐏查柡宀€鍠栭、娑樷槈濞嗘ɑ鈷栫紓鍌欒兌婵敻鎯勯娑楃箚闁汇値鍨煎Σ鎯ь渻閵堝繐鐦滈柛鐘愁殘閹广垹鈽夐姀鐘甸獓闂佺懓鐡ㄧ换鍐磹椤栨粎纾奸柣鎰靛墯缁惰尙绱掓径濠庡殶闁告瑥鎳樺铏圭矓閸℃顏存繛鍫熸⒐娣囧﹪顢曢敐蹇氣偓鍧楁煙椤旇崵鐭欐い銏＄洴閺佹劙宕ㄩ鍙ュ缂傚倸鍊风拋鏌ュ磻閹剧粯鐓曢柡鍥ュ妼閻忥繝鏌ｉ幘瀵告创闁哄本鐩俊鐑芥晲閸涱収鐎虫俊鐐€栧ú妯煎垝鎼淬劌鐒垫い鎺戝枤濞兼劖绻涢崣澶涜€块柟顕嗙節閺佹捇鎮╅懠顒傛瀮闂備浇顫夐崕宕囧椤撱垹姹查柛鈩冪⊕閻撴洟鏌￠崶銉ュ濠⒀屽枟閵囧嫰顢曢悢鎻掍壕闁哄倶鍎查弬鈧梻浣虹帛閸ㄩ潧煤閵娧呯煋妞ゆ帊闄嶆禍婊堟煛閸パ勵棞閻庢凹鍙冨畷锝堢疀濞戞瑧鍘介梺褰掑亰閸犳牠宕濈€ｎ喗鐓涢柛婊€绀佹晶顔姐亜椤撯剝纭堕柟鐟板缁楃喖顢涘ù韬插姂濮婃椽鎳￠妶鍛€鹃梺鍛婃⒐閻楁粓骞戦姀鐘闁靛繒濮撮懓鍨渻閵堝棙灏靛┑顔惧厴閹線宕奸妷锔规嫼闂備緡鍋嗛崑娑㈡嚐椤栨稒娅犳い鏂款潟娴滄粓鏌ㄩ弮鍥跺殭婵炲懎绉归弻鐔兼惞椤愩倖鍣板Δ鐘靛仜椤戝寮崒鐐村癄濠㈣泛锕らˉ澶愭⒒閸屾瑧顦﹂柟娴嬧偓瓒佹椽鏁傞悾宀婃锤濠电姴锕ょ€氼參宕ｈ箛鏃傜闁瑰瓨鐟ラ悘顏堟煟閹捐泛鈻堥柡宀嬬秮婵¤埖鎯旈敍鍕敾闂備胶绮换宥嗙椤忓牆钃熼柨娑樺濞岊亪鏌￠崒妯衡偓娑㈠触椤愶附鈷戦悹鍥ｂ偓宕囦哗闂佸摜鍠愬娆撴偩閻戣姤鍋勭痪鎷岄哺閺呮粓姊洪崨濠傚Е濞存粎鍋ら幃鐐偅閸愨斁鎷?
import [quantity] [cost_price(in total)]
#3闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜姗嗘畷闁搞倕鑻灃闁挎繂鎳庨弳鐐烘煕鎼达紕效闁哄本娲濈粻娑㈠Ψ瑜忛敍鐔兼⒑瀹曞洨甯涢柡灞诲姂閸╃偤骞嬮敂钘変汗闂佸湱绮敮妤呮倶閹剧粯鈷戠紒瀣硶閹冲鏌涢妷锝呭Ψ闁瑰嘲鎼—鍐Χ閸℃顫囬梺绯曟櫅鐎氼剙宓勯梺缁樺灱婵倝鎮￠悩缁樼厱妞ゎ厽鍨垫禍婊堟煟韫囨梹灏﹂柡宀€鍠栭、娑橆潩椤掍焦顔掗柣搴ゎ潐濞叉粓宕伴弽顓溾偓渚€寮崼婵堫槹濡炪倖鍔﹂崑鍛归崱妯肩瘈闁汇垽娼ф禒婊勩亜閺囥劌骞楅柟渚垮妽鐎靛ジ寮堕幋鐙呯吹闂備礁鎼悮顐﹀磿闁秵鍊块柛顭戝亖娴滄粓鏌熼悜妯虹仴闁哄鍊濋弻娑㈠Χ閸℃瑦鍣伴梺鍝勬湰缁嬫垿鍩㈡惔鈭ョ喓绱掑Ο鐑樻瘣cost_price]闂傚倸鍊搁崐鐑芥倿閿曞倹鍎戠憸鐗堝笒缁€澶屸偓鍏夊亾闁逞屽墴閸┾偓妞ゆ帊绀侀崵顒€霉濠婂簼閭鐐插暣楠炲海绮电€ｎ偅娅栭梻浣虹帛閸旀牞銇愰崘顔艰埞闁靛ň鏅滈埛鎴︽煠瑜版帒浜版繛鍏煎姇椤潡鎮烽悧鍫￥缂備緡鍠涘畷鐢告偖妤ｅ啯鍊挎い銈囬ケntity]闂?
show 闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌＄仦璇插姎闁绘帒鐏氶妵鍕箳瀹ュ牆鍘￠梺瑙勫灊缂佸粴=[ISBN] 闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晝鍏橀弻鐔烘崉閾忕懓鎹秂=[name] 闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晜鐓￠弻锝嗘償閿濆懐浜or=[author] 闂傚倸鍊搁崐鐑芥嚄閸洖纾婚柕濞炬櫅绾惧潡鏌涘▎蹇ｆШ妞も晝鍏橀弻娑滎槻妞ゅ骸宸皁rd=[keyword]
#1闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜姗嗘畷闁搞倕鐭傞弻鐔碱敍閸℃瀚版繛鍫涘妼椤啴濡堕崱妤冪懆闁诲孩鍑归崜鐔奉嚕閸涘﹦鐟归柍褜鍓熷濠氬焺閸愩劎绐炴繝鐢靛Т鐎氼亪鎼规惔銊︾厽闁绘浜崝宥夋煟閹垮嫮绡€鐎殿喖顭烽弫鎰緞濡粯娅嗛梻浣告啞閸旓箓宕㈡總绋垮偍闁跨喓濮甸埛鎴︽煕濠靛棗顏い銉у仱閺屾盯寮埀顒勬偡閳轰緡鍤曟い鎰╁焺閸氬鏌涢妷顖炴闁告洖鍟村娲礂閼测斂鍋為梺鍝勬噺缁诲倸宓勯棅顐㈡处濮婅崵绮绘ィ鍐╃厵閻庣數顭堟禒锕傛倶韫囷絽骞樼紒杈ㄥ笚瀵板嫮浠﹂挊澶婄闂備線娼уΛ妤呭箠濮椻偓瀵偊宕橀鑲╁姦濡炪倖甯婇悞锕€鈻嶈箛娑欌拻濞达絼璀﹂悞楣冩煛閸偄澧伴柟骞垮灲瀹曠喖顢橀悩娈挎П濠电姷鏁告慨鐢靛枈瀹ュ鍋傞柡鍥ュ灮閸欐捇鏌涢妷鎴濊嫰閸撲即姊洪崨濠冾棖缂佺姵鎹囧濠氬即閵忕姴鑰垮┑掳鍊愰崑鎾淬亜閹哄鐏查柡宀€鍠栭、娑樷槈濞嗘ɑ鈷栫紓鍌欒兌婵敻鎯勯娑楃箚闁汇値鍨煎Σ鎯ь渻閵堝繐鐦滈柛锝忕秮瀵鏁愰崼銏㈡澑闂佽鍎虫晶搴敊閸パ€鏀介柍钘夋娴滄繃銇勯妸銉у缂佸倸绉归獮鏍ㄧ瑹閸ャ劍娅旈梻渚€鈧偛鑻晶瀵糕偓娈垮枤缁垳鎹㈠┑瀣＜闁靛牆鎳忛崐顖炴⒒娴ｈ鍋犻柛搴灦瀹曟繃鎯旈妸銉﹁緢闂佺粯顭囩划顖炲煕閹达附鐓欓柤娴嬫櫅娴犳粓鏌涢弮鈧銊╁箟閹间礁绠ユい鏃堟？濡叉劙鎮楃憴鍕缂佽鐗撻獮鍐閵堝懍绱堕梺闈涱樈閸犳绮婇锝勭箚闁绘劦浜欑槐姗€鏌涢幇鍏哥胺缂佹顢匩闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁撻悩鍐蹭画闂佸啿鎼幊搴ｇ磼閳哄懎绾ч柛顐ｇ濞呭棝鏌￠崱妯肩煉闁哄瞼鍠栭獮鍡氼槾闁圭晫濞€閺屾稒鎯旈敐鍛亪闂佺粯鎼╅崑濠傜暦閸洖惟闁挎梻鍋撻鑽ょ磽閸屾艾鈧悂鎮ч崱娑掆偓锕傛倻閽樺鎽曞┑鐐村灟閸ㄥ湱绮婚敐澶嬬厽婵☆垰鐏濋惃鐑樼箾閸稑鈧妲愰幘瀛樺濞寸姴顑呴幗鐢电磽娴ｇ瓔鍤欓柣妤€妫滈悘瀣箾閹炬潙鐒归柛瀣崌閺屾盯鍩為幆褌澹曞┑锛勫亼閸婃牜鏁幒妤€纾圭憸鐗堝笒閻ゎ噣鏌涘┑鍡椻枙鐟滅増甯楅弲鏌ユ煕椤愵偄浜濈紓宥呯墦濮婃椽宕崟顒夋闂佺粯顨嗛幑鍥ь嚕婵犳碍鍋勯柣鎾虫捣妤犲洭鏌ｉ悩鍏呰埅闁告柨閰ｉ、娆撳箣濠垫劖瀵岄梺闈涚墕濡瑧绮堥崘顏佸亾閸忓浜剧紓浣割儓濞夋洟寮抽敃鍌涚厪濠电偟鍋撳▍鍛磼閻欏懐绉柡宀€鍠栭幃婊兾熺拠鑼暡闁荤偞纰嶉敃銏狀潖缂佹ɑ濯村〒姘煎灣閸斿摜绱撴担铏瑰笡闁搞劌澧庨幑銏犫槈濞嗘垹鐦堥梺鎼炲劀閸曨厸鍋撻鈧—鍐Χ閸℃ê鏆楁繝娈垮櫘閸欏啫鐣烽幋锕€绠婚柡鍌樺劜椤秴鈹戦悙鍙夘棡閽冮亶鏌ｉ妶鍕獢婵﹥妞藉Λ鍐ㄢ槈濞嗘ɑ顥ｇ紓鍌欑椤﹂亶骞婇幘缁樺仼闁绘垼濮ら弲鎻掝熆閼哥灙鎴﹀疾濠婂牊鈷戦柛娑橈梗缁堕亶鏌涢悩鎰佹當闁崇粯鎸荤€佃偐鈧稒菤閹锋椽鎮峰鍛暭閻㈩垱顨呴埢宥咁煥閸涱垳锛滈梺閫炲苯澧柟宄版嚇瀹曨偊濡烽敂绛嬪晭闂傚倷鑳剁划顖氼潖婵犳艾鍌ㄧ憸蹇曞垝閸儱纾奸柣鎰嚟閸樼敻姊虹拠鈥崇仭婵犮垺顭堥。鍧楁⒒娴ｅ憡鎯堟俊顐ｇ懇閹嫰顢涢悙鑼暫?
show finance [time]
#7闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜姗嗘闁轰礁妫濋弻锝夊閵忊晜缍昬婵犵數濮烽。顔炬閺囥垹纾婚柟杈剧畱绾惧綊鏌￠崶鈺佸壋闁兼澘娼￠弻娑樜旈崘銊ゆ澀闂侀€炲苯澧悽顖ょ節楠炲啫顭ㄩ崼鐔锋疅闂侀潧顦崕浼村箖閿濆鈷掑〒姘ｅ亾婵炰匠鍤躲劑鍩€椤掑嫭鈷掗柛鏇ㄥ亜椤忣參鎸婂┑鍫熷枑闁哄啫鐗嗛拑鐔兼煏婵炲灝鍔楁俊鎻掔墛娣囧﹪顢涘┑鍡曟睏闂佸憡妫忛崰姘辨閹惧鐟归柍褜鍓熻矾闁稿瞼鍋涢惌妤呮煕閹扳晛濡块柡鍡檮缁绘盯宕卞Ο璇查瀺闂佺锕︾划顖涚┍婵犲浂鏁嶆慨姗嗗墯浜涘┑鐐茬摠缁挾绮婚弽顓炶摕闁靛牆妫欓崣蹇涙煙闁箑鍘撮柛瀣崌瀵粙顢橀悢铚傛偅闂傚倷绶￠崜娆戠矓閻㈠憡鍋傛繛鎴欏灪閻撳啰鎲稿鍫濈婵炴垯鍨圭粻鏌ユ煕閺囥劌鐏犲ù鑲╁█閺屾盯寮撮妸銉ょ凹闁哄鐗嗛悧鍡涘煘閹达附鍊烽柡澶嬪灩娴犳悂姊洪崷顓х劸闁硅姤绮撻崺鈧い鎺嶈兌閳绘捇鏌￠崨顖毿㈡い鏇秮椤㈡洟鏁傜紒妯绘珨闂備線鈧偛鑻晶顕€鏌ｉ敐鍛Щ闁宠閰ｉ獮姗€寮堕幋婊呯梾闂備浇顕уù鐑藉极閹间讲鈧箓宕奸妷锕€娈岄梺绉嗗嫷娈曢柍閿嬪灴閺屾稑鈽夊鍫濆闂佸摜鍠曠亸娆戞閹烘鍋愰柛鎰皺娴煎矂鎮楃憴鍕缂傚秴锕妴浣糕槈濡攱顫嶅┑鐐叉閸ㄧ鍊撮梻鍌氬€峰ù鍥綖婢舵劕纾块柟鎯版閻ゎ噣鏌涢…鎴濇殨闁圭儤鎸哥欢鐐烘煙闁箑澧板Δ鐘叉喘濮婃椽宕橀崣澶嬪創闂佺锕ラ悺鏇㈠Φ閹版澘鑸规慨濠冾劎e]濠电姷鏁告慨鐑藉极閹间礁纾绘繛鎴欏灩閸戠娀鏌熺紒銏犳灈閸ユ挳姊洪幖鐐插姉闁哄應鏅犲畷顖溾偓锝庡枟閳锋垿鏌ゆ慨鎰偓鏇熺墡闂備礁鎲￠幖鈺呭礈濮樿泛绠柛娑欐綑缁犵敻鏌熼崫鍕㈡い銉﹁壘閳规垿鎮欓懜闈涙锭缂備焦褰冨锟犲灳閿曞倸閱囬柕蹇嬪灮閻掑ジ鎮楅崗澶婁壕闂佸憡娲﹂崜娑㈠储闁秵鈷戦柣鐔煎亰閸ょ喎鈹戦鑺ュ唉鐎规洘绻勯埀顒婄秵閸犳鎮″▎蹇婃斀闁稿本纰嶉崯鐐烘煛娓氣偓娴滃爼寮婚悢椋庢殝闁绘鐗嗗▍锝咁渻閵堝骸骞戦柛鏃€鍨块悰顕€宕堕澶嬫櫓缂傚倷闄嶉崹楦库吀闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁嶉崟顒佹闂佸湱鍎ら崵锕€鈽夊Ο婊勬瀹曘劑顢橀悢鎰熸岸姊绘担铏广€婇柛鎾寸箞閹柉顦崇紒瀣槸椤撳ジ宕遍弴鐘电暰闂備胶绮崝鏍亹閸愵喖鐓曢柡鍐ｅ亾闁靛洤瀚粻娑橆潩鐠虹儤鎳欑紓鍌欒兌缁垶鎯勯姘辨殾閺夊牜鍋嗛悿鈧梺鍝勫暞閸ㄥ墎绱為崼銏㈢＝闁稿本鐟︾粊鏉款渻鐎靛壊鐒鹃柣锝嗙箞楠炴牗鎷呴崫銉ф毎闂備礁鎲￠崝锕傚窗閺嶎偆鐭嗛悗锝庡亖娴滄粓鏌熼崫鍕ら柛鏂跨У閹便劑鏁愰崨顕呮＆濠殿喖锕ㄥ▍锝囧垝濞嗘垶宕夐柕濞у懏婢栭梻鍌欒兌椤牏鈧稈鏅犻幃锟犲灳閹颁礁娈ㄥ銈嗗姧鐎靛矂寮€ｎ喗鐓冪憸婊堝礈濞嗘挻鍋╃€瑰嫭澹嬮弸搴ㄦ煙閹咃紞闁伙絾濞婂娲偡閻楀牊鍎撳┑鈽嗗亝椤ㄥ棛绮?
buy [ISBN] [quantity] #1闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜妯诲暗闁崇懓绉电换娑橆啅椤旇崵鐩庣紓浣瑰姈椤ㄥ棙绌辨繝鍥舵晬婵犻潧妫楅幆鐐烘⒑瀹曞洨甯涙繛鑼枛瀵鎮㈡搴㈡疂闂佽顔栭崰姘跺礉閹间焦鈷戦柟鑲╁仜閳ь剚娲熼妴浣哥暋婵夆偓N闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁撻悩鍐蹭画闂佸啿鎼幆銈嗗緞閹邦剛顔掗梺鍝勫€堕崕鏌ユ倶娓氣偓濮婅櫣娑甸崨顔兼锭缂備胶濮甸崹鍧楀箖濞嗘劗绡€闁搞儯鍔庨崢鍗炩攽閻愬弶顥滅紒澶嬫尦瀹曟繂顫濋鑺ユ杸濡炪倖姊婚弲顐︽偂娣囩磫antity]闂?

[ISBN] 婵犵數濮烽弫鎼佸磻閻愬搫鍨傞柛顐ｆ礀缁犳彃霉閿濆懎顥忔繛瀛樼墵閺屾洘绻涜閹虫劙鎮鹃懜鐢电瘈闁靛骏绲剧涵楣冩煛閸偄澧存鐐叉婵＄兘鍩￠崒婊冨箞婵犵數鍋為崹鍫曟偡閵夆敡澶屸偓锝庡墰绾?0婵犵數濮烽弫鎼佸磻閻樿绠垫い蹇撴缁躲倝鏌ｉ敐鍛伇闁活厽鎹囬幃瑙勩偊鐟併倐鍋撻埀顒勬煛鐎ｎ偅顥堥柡宀€鍠撻埀顒傛暩椤牊绂掗敃鈧湁婵犙冪仢閳ь剚绻堝濠氭晲婢跺﹦鐤€濡炪倖妫佹慨銈呅掗崟顖涒拺閺夌偞澹嗙粣鏃傜磼閻樺磭澧垫鐐插暙铻栭柍褜鍓熼崺銉﹀緞婵炵偓鐎诲┑鈽嗗灥瀹曠敻寮抽鐔剁箚闁绘劦浜滈埀顒佺墵瀹曞綊骞庨懞銉モ偓鍧楁煥閺傚灝鈷旈柣?
[name] 闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁嶉崟顐㈢亰闁硅壈鎻徊璺ㄧ不閺冣偓閹便劑骞掗幘鏉戜函thor] 闂傚倸鍊峰ù鍥х暦閻㈢纾婚柣鎰惈缁€鍕喐閻楀牆绗掔痪鎯ь煼閺屾盯寮撮妸銉よ埅闂佹悶鍊栧ú鐔煎箖瑜版帒鐐婄憸搴ㄥ煝閺囥垺鐓曢柕鍫濇缁€瀣煛瀹€瀣瘈鐎规洖鐖奸崺鈩冩媴妞嬪孩宕熸繝鐢靛Х閺佹悂宕戝☉妯忔椽顢橀姀鐘烘憰濠电偞鍨崹褰掑礃閳ь剟鎮峰鍐弰鐎规洜鏁婚崺鈧い鎺戝閳锋垿鏌涢敂璇插箺妞ゅ繒鍠撶槐鎾愁吋閸曨収妲銈嗘穿缂嶄礁鐣锋總绋垮嵆闁绘劕绉查崝宥夊Φ閸曨垰鍐€闁靛ě鍛帓婵＄偑鍊ч懙褰掑疾濠婂懏宕叉繛鎴欏灩缁狅綁鏌ｉ幇顓熺稇缁炬澘绉剁槐鎾存媴閸撳弶效闂佺懓鎲℃繛濠囨偘椤曗偓瀹曞崬鈽夊鈧崬鍫曟⒑闂堟侗妲堕柛搴㈠▕閹繝骞嬮敂鐣屽幗闂婎偄娲﹀ú鏍ㄧ瑜旈弻锟犲椽娴ｉ晲绨界紓渚囧枟瀹€绋跨暦缁嬭鏃€鎷呴崫鍕疄濠电姷鏁搁崑娑樜涘Δ鍐╁床闁归偊鍏橀弸鏃堟煃閸濆嫬鏆熺痪鎯с偢瀵爼宕煎☉妯侯瀳闂佸憡绻冨浠嬪蓟閳╁啯濯撮柛婵勫剾閵堝悿褰掓偑閸涱垳鏆ら梺纭呮珪閻楃娀宕洪敓鐘茬闁诡垎鍕彨闂?
闂傚倸鍊搁崐椋庣矆娓氣偓楠炴牠顢曢敂钘変罕濠电姴锕ら悧鍡欑矆閸喓绡€闂傚牊渚楅崕鎰亜閵夈儻韬柡灞界Ч瀹曨偊宕熼鈧▍锝囩磽娴ｆ彃浜鹃梺鍛婂姦閸犳鎮￠弴鐔虹闁瑰瓨绻傞懜鍦偓娈垮櫍缁犳牠寮诲☉銏″亜闂佸灝顑呴ˇ鈺冪磽娴ｈ櫣甯涚紒瀣尰缁傛帡鏁傞崜褏鐓撻梺鍓茬厛閸犳帡骞忛妶鍡欑瘈闁汇垽娼цⅴ闂佺顑嗛幐鎼佸Υ閹烘埈娼╅柨婵嗘噸婢规洟鏌ｆ惔銈庢綈婵炴祴鏅濆濠囧箰鎼达綆娴勯梺鎸庢礀閸婂綊宕戦埡鍐ｅ亾閸忓浜鹃梺閫炲苯澧撮柛鈺冨仜閳藉濮€閳锯偓閹?
闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁撻悩鑼槷闂佸搫娲㈤崹鍦不閻樿绠归柟纰卞幘閸樻盯鏌℃担闈╄含闁哄瞼鍠栭弻鍥晝閳ь剟鐛鈧弻宥囩磼濡儵鎷婚梺閫炲苯澧紒鐘茬Ч瀹曟洟鏌嗗鍡椾罕闂婎偄娲﹂幐楣冨箺閵夆晜鈷?婵犵數濮烽弫鎼佸磻閻愬搫鍨傞柛顐ｆ礀缁犲綊鏌嶉崫鍕偓濠氥€呴崣澶岀瘈闂傚牊渚楅崕鎰版煕鎼淬垹鐏撮柡宀嬬秮閺佹劙宕ㄩ褎校闂?
[keyword] 闂傚倸鍊搁崐宄懊归崶褜娴栭柕濞炬櫆閸ゅ嫰鏌涢幘鑼妽鐎规洖寮剁换婵嬫濞戞艾鈪辩紓浣插亾濠电姴娲﹂崐鐢告煥濠靛棝顎楀褜鍨堕弻娑氣偓锝庡亞婢ь剟鏌曢崶褍顏鐐叉喘閸┾剝鎷呮潪鐗堝亝闂傚倷娴囧Λ鍕疮娴兼潙绐楅柟鎹愵嚙閻掑灚銇勯幒宥囪窗闁哥喎绻橀弻娑㈡偐閹颁焦鐣堕柣鎾卞€濋弻鈥愁吋鎼粹€冲箥婵炲瓨绮岀紞濠囧蓟濞戞粠妲煎銈冨妼閹虫劗鍒掗崼婵堟殕闁告洦鍓涢崢鍗炩攽閻愭潙鐏﹂柤褰掔畺閵嗗倿鎳栭埞鎯т壕閻熸瑥瀚粈鍐ㄢ攽閻愯韬€殿喖顭烽崺鍕礃閵娧呯嵁闂備礁澹婇崑鍛崲閸屾稒鍙忓瀣捣绾捐棄霉閿濆嫮鐭欓柛婵囨そ閺岋綁鎮ら崒姘兼喘缂備緡鍠楅悷锕€顕ラ崟顒傜瘈閹肩补鍓濋崐顖炴⒒娴ｅ憡鍟炲〒姘殜瀹曚即寮介鐐殿槶闂佹眹鍨归幉锟犲煕閹达附鐓曟繛鎴烇公閸旂喖鏌熼崘鎻掓殻闁哄被鍊曠叅閻犲洩灏欐禒顖氣攽閳ュ啿绾ч柛鏃€鐟╁畷娲晸閻樻彃绐涘銈嗘尵婵兘宕㈤鍕拻濞达絽鎲￠崯鐐烘煕椤垵鐏︾€规洘鍔曡灃闁告劦浜為悞濂告⒑缁洖澧茬紒瀣浮閹繝濡烽敂鍓ь啎闂佺懓顕崕鎰版倿妤ｅ啯鍊垫慨姗嗗亜瀹撳棝鏌＄仦鍓р槈闁宠绉堕幏鐘诲矗婢跺妲遍梻浣虹帛閹稿爼宕曢弻銉ノ﹂柛鏇ㄥ灠缁秹鏌涢妷鎴濆€归惈蹇涙⒒娴ｅ憡璐￠柡鍜佸亰瀹曠増鎯旈妸銉у弨婵犮垼鍩栭崝鏇炍涘Ο鑽ょ闁糕剝锚閸斻倝鏌涢幘瑙勭【闁?| (缂傚倸鍊搁崐鎼佸磹閻戣姤鍊块柨鏇楀亾妞ゎ偄绻楅妵鎰板箳閹惧厖缃曟繝鐢靛Т閿曘倝鎮ч崱娑樿Е?闂傚倸鍊搁崐鎼佸磹閹间礁纾归柟闂寸缁犵娀鐓崶銊р槈闁藉啰鍠栭弻鏇熺箾瑜嶇€氬嘲顭囬悢鍏尖拺缁绢厼鎳忚ぐ褔姊婚崟顐㈩伃鐎殿喗鐓￠、妤呭礋椤掆偓閳ь剙鐖奸弻锝夊箛椤栨稓銆愭繛瀛樼矊濠€杈╂閹烘鍋愰弶鍫氭櫇閻撴捇姊?
濠电姷鏁告慨鐢割敊閺嶎厼闂い鏍ㄧ矊缁躲倝鏌ｉ敐鍛拱鐎规洘鐓￠幃妤呮晲鎼粹剝鐏嶉梺缁樻尭閸婂湱鎹㈠┑鍥╃瘈闁稿本绮岄。铏圭磽娴ｆ彃浜鹃梺绋跨灱閸嬬偤鎮″▎鎾寸厵妞ゆ牗绋掔欢鑼偖濮樿埖鈷戦柛婵嗗椤ョ偤鏌ｉ埡濠傜仸妤犵偛鍟灃闁逞屽墴閸┿儲寰勬繛鐐€诲┑鈽嗗灥瀹曠敻寮抽敂鐣岀瘈闁汇垽娼цⅴ闂佺顑嗛幐鎼佹箒闂佺粯鎸哥€垫帡宕甸悢鍏肩厱婵炲棙鍔栫粈鍐煏閸パ冾伃妤犵偛娲崺鈩冩媴鏉炵増鍋呴梻鍌欐祰濡椼劎绮堟笟鈧幃銉︾附缁嬭法鐣哄┑掳鍊曢崯顖炲礂濠婂牊鐓曟繝濞惧亾闁绘帪濡囩槐鐐哄醇濠靛啯鏂€闂佸疇妫勫Λ妤佺閺嶎厽鐓曞┑鐘插暞缁€瀣亜閵忊€冲摵闁轰焦鍔栧鍕節閸屾氨銈梻鍌欒兌缁垶宕濋弽顑句汗闁告劦鍠栭悡婵嬬叓閸ャ劍鈷掔紒鐘荤畺閹鎮藉▓璺ㄥ姼閻炴哎鍔戝铏圭矙閸ф鈧鈧娲﹂崜鐔笺€佸鑸垫櫜闁糕檧鏅滄晥闂佺澹堥幓顏嗗緤閸ф鍋傞柡鍐ㄧ墛閳锋垹绱撴担濮戭亪鎮橀敂濮愪簻妞ゆ挾鍋炴径鍕磼?
闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁撻悩鑼槷闂佸搫娲㈤崹鍦不閻樿绠归柟纰卞幘閸樻盯鏌℃担闈╄含闁哄瞼鍠栭幃褔宕奸悢鍝勫殥缂傚倷鑳舵慨鐢稿垂閸ф绠栫憸鐗堝笒閻愬﹪鏌曟繛鍨姢缂佷胶鍏橀幃宄邦煥閸涱収鏆梺鑽ゅ枂閸庣敻宕洪妷锕€绶為柟閭﹀墰椤旀帡鎮楃憴鍕婵炲绠撴俊鐤槾缁惧墽鍘ч…璺ㄦ崉閻氭潙濮涢梺鍦櫕婵數鎹?婵犵數濮烽弫鎼佸磻閻愬搫鍨傞柛顐ｆ礀缁犲綊鏌嶉崫鍕偓濠氥€呴崣澶岀瘈闂傚牊渚楅崕鎰版煕鎼淬垹鐏撮柡宀嬬秮閺佹劙宕ㄩ褎校闂?
[quantity] 婵犵數濮烽弫鎼佸磻閻愬搫鍨傞柛顐ｆ礀缁犳澘螖閿濆懎鏆欑痪鎯ф健閺屾洟宕煎┑鎰﹀┑顔款潐閻擄繝寮婚妸銉㈡斀闁糕檧鏅滅瑧闂備礁鎼鍕濮樿泛绠栧ù鐘差儛閺佸秹鏌ㄥ┑鍡樺櫤闁诲繑鎸剧槐鎾存媴閹绘帊澹?100000闂?
闂傚倸鍊峰ù鍥敋瑜嶉湁闁绘垼妫勯弸浣糕攽閻樺疇澹橀柣鎺戠仛閵囧嫰骞掑鍫濆帯闂侀潧妫欑敮锟犲蓟閵堝鎹舵い鎾跺Л閺佸獡ow闂傚倸鍊搁崐鐑芥嚄閸洖绠犻柟鍓х帛閸婅埖绻濋棃娑氬ⅱ闁活厽鎸鹃埀顒冾潐濞叉牕煤閵娧呯焼濠电姴娲﹂悡娑㈡煕閹扳晛濡垮褎鐩弻锟犲椽娴ｇ顫梺閫炲苯澧柛妯荤矒瀹曟垿骞樼紒妯煎幈闂佽婢橀崥鈧紒銊ょ矙閺岋綁骞囬鐔侯槹濠殿喖锕ュ钘夌暦閵婏妇绡€闁稿本绮堥幃锝夋⒒娴ｄ警鐒剧紒銊︽そ瀹曟劕鈹戠€ｎ亞鐣洪悷婊冪箳閸掓帒鈻庤箛濠冪€婚梺璇″瀻閸曢潧鎮梻鍌氬€搁…顒勫磻閸曨個娲Χ閸滀焦鍍甸梺鎸庢煥婢т粙鎯岄崱娑欏€甸柨婵嗛閺嬬喖鏌ｉ幘鍗炲姕缂佺粯鐩獮瀣倷閸偄娅樻俊鐐€х徊楣冩偂閿熺姴钃熼柨婵嗩槹閺呮粓鏌ゅù瀣珖闁挎稓鍠栧铏规嫚閳ヨ櫕鐏嶆繝銏㈡嚀濡瑧绮嬮幒妤佹櫇闁稿本绋戝▓鎰版⒑閸愬弶鎯堥柨鏇悼濡叉劕顫滈埀顒€顫忕紒妯诲闁告稑锕ラ崕鎾绘⒑缂佹﹩娈曠紒顔芥尭閻ｅ嘲顭ㄩ崼婢晝鎲告惔顭掔稏闁哄洨鍠撶弧鈧梻鍌氱墛娓氭宕曡箛鏇犵＜闁绘﹩鍠栭崝锕傛煛鐏炵晫啸妞ぱ傜窔閺屾盯骞樼捄鐑樼€诲銈嗘穿缂嶄礁鐣疯ぐ鎺濇晝闁靛繈鍨婚悰顔尖攽閻橆喖鐏辨繛澶嬬洴钘濋弶鍫氭櫇娑撳秵鎱ㄥΟ鍨厫闁抽攱鍨块幃褰掑炊閿濆倸浜鹃柛鎰絻椤掓粓姊绘担瑙勫仩闁告柨鐭傞幃銉╁礂闂傚绠氶梺鍝勵槹閸╁牓宕ョ€ｎ亶鐔嗛悹杞拌閸庡繘鏌涢幙鍐ㄦ灈妞ゎ亜鍟存俊鍫曞幢濡》绱╅梻浣侯焾椤戝棝骞愮紒妯尖攳濠电姴娴傞弫鍐煥濠靛棙濯奸柛銈咁儑缁辨挻鎷呯粙搴撳亾閸︻厽鏆滈柣鎰暩绾句粙鏌熼悙顒€澧繛?闂傚倸鍊搁崐鎼佸磹閹间礁纾归柟闂寸缁犵娀鐓崶銊р槈闁藉啰鍠栭弻鏇熺箾瑜嶇€氬嘲顭囬悢鍏尖拺缁绢厼鎳忚ぐ褔姊婚崟顐㈩伃鐎殿喗鐓￠、妤呭礋椤掆偓閳ь剙鐖奸弻锝夊箛椤栨稓銆愭繛瀛樼矎椤銆冮妷鈺傚€烽柛娆忣樈濡箓姊洪崫鍕槵闁逞屽墯閸撴岸宕ョ€ｎ亶鐔嗛悹杞拌閸庢粎绱掓潏鈺傛毄缂佽鲸鎸婚幏鍛存惞閻熸壆顐奸柣搴″帨閸嬫捇鏌熼梻瀵割槮缂佺姵鐗犻弻鐔碱敍閸″繐浜鹃梺鍝勵儏闁帮綁鐛弽顬ュ酣顢楅埀顒勫焵椤掍礁濮嶆鐐茬箻閸╁嫰宕橀鍡╁晭闂佸搫顦悧鍡樻櫠娴犲绀嗛柟娈垮枤绾惧ジ鎮楅敐搴濈盎妞ゅ浚鍋呮穱濠囧矗婢跺﹤顫岄梺瀹狀潐閸ㄥ灝鐣烽崼鏇炍╅柕澶堝劚闊﹂梻鍌氬€峰ù鍥綖婢舵劕纾跨€规洖娲らˉ姘亜閹惧崬鐏╃紒鐘虫そ閺岋絽螣閼测晛绗￠梺缁樻尰濞叉﹢骞堥妸銉建闁糕剝顨呴埛瀣渻閵堝懎顒㈡い銊ユ嚇閸╃偤骞嬮敂缁樻櫓闂佽鍨庨崒娑辨綗闂傚倷鐒﹂幃鍫曞礉瀹ュ纾块柟鎯版閻撴﹢鏌熸潏鍓х暠闁绘劕锕弻鏇熺節韫囨洜鏆犲銈呯箣閸楀啿顫忕紒妯诲闁告繂瀚紓鎾绘⒑缁嬫寧鍞夐悘蹇旂懇瀹曟岸骞掗幋鐘虫畷闂佸憡娲﹂崜娆愮闁秵鍋℃繝濠傚椤ュ牏鈧鍣崑鍕敇婵傜鐐婇柨鏃囨婵壆绱撻崒娆戝妽缂佸鍨块、鏍幢濞戞顔?


report finance #7闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜姗嗘畷闁稿孩顨嗛妵鍕籍閸屾矮澹曞銈庡亝濞叉牠婀侀梺缁樻尭濞寸兘骞楅悩缁樼厱閻庯絻鍔屾慨鍌炴煛瀹€瀣М鐎殿噮鍣ｅ畷鎺楀Χ閸パ冃梻鍌欐祰椤曆呮崲閹邦優娲Χ婢跺﹦鍙€婵犮垼鍩栭崝鏇犵不缂佹ǜ浜滈柡宥冨妿閻擃垰顭跨憴鍕闁哄矉绲鹃幆鏃堝閳轰焦娅涢梻浣告憸婵數鍠婂澶婄疄闁靛ň鏅涚粈鍫㈡喐韫囨稒鍎楅柛顐犲劜閻撴盯鏌涢弴銊ヤ簽缂佺姵濞婇弻锝夊Χ閸屾矮澹曢梻鍌氬€风粈渚€骞夐敓鐘茬闊洦绋戦悿鐐箾閹寸偟鎳呮い鈺傚絻闇夐柣鎾虫捣閹界娀鏌ｉ幘璺烘灈闁哄苯绉瑰畷顐﹀礋鐠鸿桨绱ｉ梻浣告惈椤戝啴宕愰弽顐ｅ床婵炴垯鍨归柋鍥煟閺冨牜妫戝ù鐘层偢濮婃椽鎮烽弶鎸幮╃紓鍌氱Т閿曘儵骞堥妸鈺佺劦妞ゆ帒瀚悡鐔镐繆椤栨粌鍔嬮柍缁樻礃缁绘盯宕楅悡搴樻灆濠殿喖锕ㄥ▍锝呪槈閻㈢宸濇い鏍ㄦ皑婢ь垶姊绘担渚劸閻庢稈鏅犻獮鎰版惞椤愶紕绠氶梺鍦檸閸犳牜绮堥崘鈹夸簻闁哄啫娲よ濠电偛鎳忛悧鐘诲蓟閿濆牏鐤€闁哄洨鍋樼划鑸电節閳封偓閸℃ぅ鎾剁磼閺冨倸鏋涙鐐叉喘椤㈡瑩鎮锋０浣割棜婵犵數鍋涢悧鍡涙倶濠靛鍑犳繛鎴炴皑绾捐偐绱撴担鐧镐緵婵炲牊绮庨埀顒冾潐濞茬喎顭囪閳ワ箓濡搁埡浣哥獩濡炪倕绻愮€氼亝绔?
report employee #7闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜姗嗘畷闁稿孩顨嗛妵鍕籍閸屾矮澹曞銈庡亝濞叉牠婀侀梺缁樻尭濞寸兘骞楅悩缁樼厱閻庯絻鍔屾慨鍌炴煛瀹€瀣М鐎殿噮鍣ｅ畷鎺楀Χ閸パ冃梻鍌欐祰椤曆呮崲閹邦優娲Χ婢跺﹦鍙€婵犮垼鍩栭崝鏇犵不缂佹ǜ浜滈柡宥冨妿閻擃垰顭跨憴鍕闁哄矉绲鹃幆鏃堝閳轰焦娅涢梻浣告憸婵數鍠婂澶婄疄闁靛ň鏅涚粈鍫㈡喐韫囨稒鍎楅柛顐犲劜閻撴盯鏌涢弴銊ヤ簽缂佺姵濞婇弻锝夊Χ閸屾矮澹曢梻鍌氬€风粈渚€骞夐敓鐘茬闊洦绋戦悿鐐箾閹寸偟鎳呮い鈺傚絻闇夐柣鎾虫捣閹界娀鏌ｉ幘璺烘灈闁哄苯绉瑰畷顐﹀礋鐠鸿桨绱ｉ梻浣告惈椤戝啴宕愰弽顐ｅ床婵炴垯鍨归柋鍥煟閺冨牜妫戝ù鐓庣焸閹鎲撮崟顒傦紭闂佸憡鏌ㄩ惌渚€鎮橀幒妤佺厸濠㈣泛鑻禒锕€顭块悷鐗堫棦闁诡垰鑻灃闁告侗鍠栭埀顒傛暬閹嘲鈻庤箛鎿冧痪闂佺顑囨繛鈧柡灞剧⊕閹棃濮€閻欌偓濡棛绱撴担鎴掑惈闁稿鍊曢锝夘敋閳ь剙鐣烽悡搴樻斀闁割偁鍨哄В搴ㄦ⒒閸屾瑧顦﹂柟娴嬪墲缁楃喎螖閸涱厼鍋嶆繝闈涘€婚…鍫ュ礄閻樼鍋撻崗澶婁壕闂佸憡娲﹂崜娆愮閳轰讲鏀介柣鎰綑閻忓崬霉濠婂骸澧寸€规洏鍨归…銊╁川椤栨粣绱查梺鍝勵槸閻楀嫰宕濇惔锝囦笉婵せ鍋撻柡宀€鍠庨悾锟犳焽閿曗偓閸撳爼鎮楀▓鍨灈濠⒀冮叄楠炴垿宕熼姣尖晜銇勯澶婃珮闁告瑥鍟～蹇涙惞閸︻厾鐓撻柣鐘充航閸斿酣顢欓幋锔解拺缂侇垱娲樺▍鍡涙煟濡ゅ啫鈻堥柣娑卞櫍瀵粙顢橀悢鍝勫汲闂佽鍑界紞鍡涘磻閸曨垼鏁侀柟鐐灱閺€浠嬫煟濡鍤嬮柡鈧繝姘厱闁哄啠鍋撴い銊ョ墢閸掓帡宕奸悢椋庣獮闂佸綊鍋婇崢楣冨储閹间焦鍊垫鐐茬仢閸旀碍绻涚仦鍌氣偓妤呭极椤曗偓瀹曟粍鎷呴搹鐧哥床闂備浇顫夎ぐ鍐敄閸モ晛濮柍褜鍓熷铏规兜閸涱喚褰ч梺鐑╂櫓閸ㄥ爼濡存笟鈧顕€宕煎┑鍫Ч婵＄偑鍊栭幐楣冨窗閹扮増鍎?
log #7闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜姗嗘畷闁稿孩顨嗛妵鍕籍閸屾矮澹曞銈庡亝濞茬喖寮婚敐鍛傛棃鍩€椤掑嫭鍋嬪┑鐘插暟椤╂煡鏌曢崼婵愭Ч闁绘挻鐩弻娑氫沪閸撗€妲堝銈嗘礃缁海妲愰幒妤€鐒垫い鎺戝閻掑灚銇勯幒鎴濐仾闁绘挾鍠栭弻锝呂熼懡銈嗗櫑闂佸摜鍠愭竟鍡欏垝婵犳艾绠ユい鏂垮⒔閿涙粌鈹戦悙鍙夆枙濞存粎鍋ら幃楣冩倻濮楀棙顔旈梺缁樺姈瑜板啴寮抽敐澶嬬厸濞达絿顭堥埀顒€娼￠獮鍐ㄢ枎閹垮啯鏅㈤梺绋挎湰缁矂鎮欐繝鍥ㄢ拻闁稿本鐟ч崝宥夋煟椤忓嫮绉虹€规洘绻傞悾婵嬪焵椤掑嫬鐒垫い鎺嶇閸ゎ剟鏌涘Ο鍨棈闁诲繐顑夊娲礃閸欏鍎撻柣搴㈠嚬閸ｏ綁骞冮崸妤€鐒垫い鎺嗗亾闁宠鍨堕獮濠囨煕婵犲啯绀堥柍褜鍓氬銊╁礂濡櫣鏆︽い鎺戝缁€鍫澝归敐鍥ㄥ殌闁哄鍨垮铏圭磼濮楀棙鐣堕梺缁橆殔閿曪妇鍒掑杈ㄥ磯闁靛ě鍜冪床闂佸搫顦悧鍕礉鎼达絿涓嶉柣鎰暯閸嬫挾鎲撮崟顒傤槶婵犵數鍋愰崑鎾绘倵鐟欏嫭纾搁柛鏃€鍨块妴浣糕枎閹存繃鐎抽梺鍛婄懄椤洤螞椤栨粎纾介柛灞捐壘閳ь剟顥撳▎銏ゆ晸閻樻彃鐎梻鍌氱墛缁嬫捇寮抽敃鍌涚厽闁靛繈鍊栧☉褔鏌涢妸锔剧畺缂佺粯绋戦蹇涱敊閼姐倗娉跨紓鍌欒兌婵箖宕戦幇鏉跨劦妞ゆ巻鍋撶紒鐘茬Ч瀹曟洘娼忛埞鎯т壕婵鍘ч弸銈囩磼椤旂晫鎳勭紒缁樼箞瀹曠喖顢橀悪鍛簥濠碉紕鍋戦崐鏍礉閹达箑纾块梺顒€绉寸憴锕傛偡濞嗗繐顏紒鐘荤畺閺屾盯顢曢妶鍛€婚梺璇茬箚閺呯娀寮婚悢鍝ラ檮濠㈣泛锕ｇ花濂告⒑閻熸澘妲婚柟铏姉閸掓帒鈻庨幘鍐茬€銈嗘閸嬫劗绮欓崶銊х瘈闁汇垽娼ф禒婊堟煟鎺抽崝搴ㄥ礆閹烘柧娌弶鐐村閻╊垰顕ｉ鈧畷鎺戭潩椤掑倷鍠婇梻鍌欑婢瑰﹪宕戦崱娑樼獥闁规崘顕ч悡婵嬫煛閸ャ儱鐏柣鎾存礃閵囧嫰骞囬棃娑楃盎婵犫拃鍕棆缂佽鲸甯￠崺鈧い鎺嶇缁剁偛鈹戦悙鏉戠瑨缂傚秴锕獮鍐煛閸滀焦鏅╅梺缁樻尭妤犳悂锝為幘缁樼厽閹兼番鍩勯崯蹇涙煕閿濆繒绉挊鐔兼煙閹规劦鍤欑紒鐙€鍨抽幉鎼佹偋閸繄鐟ㄥ銈庡亜閹虫﹢寮婚敐鍛傜喖鎮滃Ο閿嬬亞婵犵數鍋犳竟鍫濃枍閺囩姵宕叉繛鎴欏灩缁狅綁鏌ｉ幇顓熺稇缁炬澘绉瑰娲箰鎼淬垻锛橀梺绋挎捣閺佸鐛崱妯肩懝闁逞屽墴瀹曟椽宕熼姘鳖槰濡炪倕绻嬮悞锕傛倶閸愵喗鈷掑〒姘ｅ亾闁逞屽墰閸嬫盯鎳熼娑欐珷闁规鍠氱壕鍏笺亜閺囩偞鍣圭€殿噮鍠氶埀顒侇問閸ｎ噣宕滈悢鐓庣畺婵炲棙鎼╅弫鍡涙煃瑜滈崜鐔奉嚕閵娾晩鏁囬柕蹇婃閹锋椽姊洪崨濠勭畵閻庢凹鍓熼、鏃堫敂閸喓鍘电紓浣割儐椤戞瑩鎮￠懖鈹惧亾鐟欏嫭绀冩繛鍙夌箘缁鈽夊Ο閿嬵潔濠碘槅鍨抽埛鍫澪ｉ幍顔剧＝濞达絽鎼禍鐐節閵忊槄鑰块挊婵嬪级閸碍娅囬柣顓炴椤潡鎳滈棃娑橆潔闂佺粯鎸荤粙鎾诲焵椤掆偓缁犲秹宕曢崡鐏绘椽濡堕崶銊︽闂佸憡鎸烽懗鍓佸婵傚憡鐓欓柟缁樺俯閸庢垹绱掗埦鈧崑鎾绘⒒娴ｄ警鏀版繛鍛礋閹嫰顢涢悙顏佸亾娓氣偓瀵噣宕煎┑鍫Ч婵＄偑鍊栭幐楣冨窗閹扮増鍎?
report myself #3闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熼悜妯诲暗闁崇懓绉归弻褑绠涘鍏肩秷閻庤娲橀悡锟犲蓟閻斿憡缍囬柛鎾楀懏娈搁梻浣虹帛閸旀洟鏁冮鍫濊摕闁挎繂顦粻娑欍亜閹哄棗浜剧紓浣哄珡閸ャ劎鍘遍梺缁樏鍫曞闯娴犲鐓冪憸婊堝礈濠靛缍栧鑸靛姇缁犳牠鏌涢锝嗙缁炬儳娼￠弻鐔虹磼閵忕姵鐏堥梺鍛婁亢椤鎹㈠┑鍥╃瘈闁稿本纰嶉悘鎾绘⒑閸濄儱鏋庨柟铏锝夊醇閺囩偤鍞跺┑顔斤供閸樹粙鎮甸弴銏♀拺濞村吋鐟х粔顔济瑰鍐煟鐎殿喖顭烽幃銏ゆ偂鎼达紕鈧厼顪冮妶鍡樷拹閻庢艾閰ｉ弫宥夊礋椤撶媴绱抽柣搴＄畭閸庡崬螞濞嗘挸鐓曢柟鐑橆殕閻撴瑧鈧懓瀚伴崑濠囧磿閺冨倵鍋撳▓鍨灈濠⒀冮叄楠炴垿宕熼姣尖晜銇勯澶婃珮闁告瑥鍟～蹇撁洪鍕唶闁硅壈鎻徊鍝勎ｉ崼銉︹拺闁告繂瀚晶閬嶆煕閹捐泛鏋涙鐐插暢椤﹀绱掗鐣屾噧闁宠閰ｉ獮鍡氼槼妞ゆ挸娼″缁樼節鎼粹€茬盎濠电偠顕滅粻鎾诲箠濠靛绠氱憸澶愬几閺傛５褰掓偂鎼达絾鎲奸梺?
*/

using namespace std;
const long long mod=233333333333;
struct String{//婵犵數濮烽弫鎼佸磻閻愬搫鍨傞柛顐ｆ礀缁犱即鏌熺紒銏犳灈缁炬儳顭烽弻鐔兼倷椤掍胶浼囧┑鈩冨絻閻楁捇寮婚悢鐓庡瀭妞ゆ柨鍚嬪▓銊х磽娴ｉ潧濡奸柕鍫熸倐瀵鏁嶉崟顏呭媰闂佸搫鍊堕崐娑㈠触椤愶附鈷戦悹鍥ｂ偓宕囦哗闂佸摜鍠愬娆撴偩閻戣姤鍋勭痪鎷岄哺閺呮繈姊洪棃娑氬婵☆偅鐟╅幆渚€鎮欓悜妯锋嫽闂佺鏈懝楣冨焵椤掑倹鏆€规洘鍨块獮姗€宕滄担鐚寸床闂備焦鍎崇换妤咃綖婢跺ň鏋嶉柟鎻掓敤ng 
	char s[40];
	char& operator[](int b){return s[b];}
	friend int cmp(String& a,String& b){//cmp add a &
		for(int i=1;;i++){
			if(a[i]==b[i]&&!a[i])break;
			if(a[i]!=b[i])return a[i]<b[i]?-1:1;
		}
		return 0;
	}
	friend ostream & operator<<(ostream & out,const String& b){
		printf("%s",b.s+1);
		return out;
	}
	String(string ss){
		int top=0;
		memset(s,0,sizeof(s));
		for(int i=0;i<ss.size();i++)
			s[++top]=ss[i];
		s[++top]='\0';
	}
	String(){}
	String(char* a){
		memset(s,0,sizeof(s));
		for(int i=1;;i++){
			s[i]=a[i];
			if(!a[i])break;
		}
	}
}nullll,roooot((string)("root"));

bool isempty(String& a){
	return cmp(a,nullll)==0;
}
//闂傚倸鍊峰ù鍥х暦閸偅鍙忛柡澶嬪殮濞差亜鐓涢柛婊€鐒﹂弲顏堟偡濠婂嫭鐓ラ柣锝囧厴閺佹劖寰勬繝鍌濃偓鍨攽閻愭潙鐏︽い顓炴喘閹繝骞嬮悙鐢电槇闂佹眹鍨藉褍鐡梻浣侯焾閿曪箓鈥﹂崼銉晪闁靛鏅涚粻鑽ょ磽閸垹啸缂佺姵鑹鹃—鍐Χ閸℃顫庨梺鍝ュТ鐎涒晝绮嬪鍡愬亝闁告劏鏂侀幏?
//initialization
const int block=70;
enum node_type{Begin=1,End,normal};
enum TYPE{
	EXIT=1,SU,logout,USERADD,REGISTER,DELETE,PASSWD,SELECT,MODIFY,IMPORT,SHOW,SHOW_FINANCE,BUY,
	REPORT_FINANCE,REPORT_IMPLOYEE,REPORT_MYSELY,LOG,WRONG
};
bool check_empty(string& s,int b){//濠电姷鏁告慨鐑姐€傞挊澹╋綁宕ㄩ弶鎴狅紱闂侀€炲苯澧撮柡灞剧〒閳ь剨缍嗛崑鍛暦瀹€鍕厸鐎光偓鐎ｎ剛锛熸繛瀵稿婵″洭骞忛悩璇茬闁圭儤鍩堝姘辩磽閸屾艾鈧娆㈤敓鐘茬獥婵娉涢崥褰掑级閸稑濡跨紒鐘荤畺瀵爼宕煎┑鍡忔寖闂佸憡甯楁竟鍡欐閹烘挸绶炲┑鐘插閻撶喖姊虹拠鈥虫灈婵炲皷鈧磭鏆﹂柛妤冨€ｉ弮鈧换婵嬪磼濞戝崬鎮梻鍌氬€风欢姘跺焵椤掑倸浠滈柤娲诲灡閺呭爼顢涢悙瀵稿幍婵炴挻鑹鹃悘婵囦繆鐠恒劎纾介柛灞剧⊕瀹曞本銇勯姀鈥冲摵闁糕斁鍋撳銈嗗坊閸嬫挻銇勯弴顏嗙ɑ閻庨潧銈搁獮鏍敇閻斿憡鐝┑鐘愁問閸犳鏁冮埡鍛偍濠靛倻顭堢粈鍫ユ煏婵犲繐顩紒鐘荤畺閺岀喓鈧數顭堟禒锔锯偓瑙勬礀鐎氼厾鎹㈠☉銏犳そ闁告劦浜炶ⅵ闂備胶纭堕弲婵嬪磻閵堝拋鍤曞ù鐘差儏鎯熼悷婊冾樀瀵?
	for(int i=b;i<s.size();i++)if(s[i]!=' ')return 0;
	return 1;
}
void StringToChar(string& s,char* a){
	int top=0;
	for(int i=0;i<s.size();i++)
		a[++top]=s[i];
	a[++top]='\0';
}
int StringToInterger(string& s){
	int ans=0;
	for(int i=0;i<s.size();i++)
		ans=ans*10+s[i]-'0';
	return ans;
}
class INPUT{
	public:
	char user_id[35];
	char passwd[35];
	char name[32];
	char old_passwd[35];
	string keyword[10];
	char ISBN[35];
	char author[35];
	int quantity,time;
	double price,cost_price;
	int permission;
	bool ISBN_flag,author_flag,name_flag,keyword_flag,price_flag;
	public:
	INPUT(){
		memset(user_id,0,sizeof(user_id));
		memset(passwd,0,sizeof(passwd));
		memset(name,0,sizeof(name));
		memset(old_passwd,0,sizeof(old_passwd));
		memset(author,0,sizeof(author));
		memset(ISBN,0,sizeof(ISBN));
		quantity=time=price=cost_price=permission=0;	
		ISBN_flag=author_flag=name_flag=keyword_flag=price_flag=0;
	}
	
	TYPE input(string s){
		string iden="";bool f=0;int i;
		for(i=0;i<s.size();i++){
			if(s[i]==' '&&f)break;
			if(s[i]!=' ')f=1;
			iden+=s[i];
		}
			if(iden=="exit"){
				if(!check_empty(s,i))return WRONG;
				return EXIT;
			}
			else if(iden=="su"){
				f=0;
				string tmp("");
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' '){f=1;}
					else continue;
					tmp+=s[i];
				}
				f=0;
				string tmp2("");
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' '){f=1;}
					else continue;
					tmp2+=s[i];
				}
				if(tmp.size()>30||tmp2.size()>30)return WRONG;
				if(!check_empty(s,i))return WRONG;
				StringToChar(tmp,user_id);
				StringToChar(tmp2,passwd);
				return SU;
			}
			else if(iden=="logout"){
				if(!check_empty(s,i))return WRONG;
				return logout;
			}
			else if(iden=="useradd"){
				string tmp("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp+=s[i];
				}
				string tmp2("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp2+=s[i];
				}
				string tmp3("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp3+=s[i];
				}
				string tmp4("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp4+=s[i];
				}
				if(tmp4=="")return WRONG;
				if(tmp.size()>30||tmp2.size()>30)return WRONG;
				if(!check_empty(s,i))return WRONG;
				StringToChar(tmp,user_id);
				StringToChar(tmp2,passwd);
				if(StringToInterger(tmp3)==0)return WRONG;
				permission=StringToInterger(tmp3);
				StringToChar(tmp4,name);
				return USERADD;
			}
			else if(iden=="register"){
				string tmp("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp+=s[i];
				}
				string tmp2("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp2+=s[i];
				}
				string tmp3("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp3+=s[i];
				}
				if(tmp3=="")return WRONG;
				if(tmp.size()>30||tmp2.size()>30)return WRONG;
				if(!check_empty(s,i))return WRONG;
				StringToChar(tmp,user_id);
				StringToChar(tmp2,passwd);
				StringToChar(tmp3,name);
				return REGISTER;
			}
			else if(iden=="delete"){
				string tmp("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp+=s[i];
				}
				if(tmp.size()==0||tmp.size()>30)return WRONG;
				if(!check_empty(s,i))return WRONG;
				StringToChar(tmp,user_id);
				return DELETE;
			}
			else if(iden=="passwd"){
				string tmp("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp+=s[i];
				}
				string tmp2("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp2+=s[i];
				}
				string tmp3("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp3+=s[i];
				}
				if(tmp.size()>30||tmp2.size()>30||tmp3.size()>30)return WRONG;
				if(!check_empty(s,i))return WRONG;
				StringToChar(tmp,user_id);
				StringToChar(tmp2,old_passwd);
				StringToChar(tmp3,passwd);
				return PASSWD;
			}
			else if(iden=="select"){
				string tmp("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp+=s[i];
				}
				if(!check_empty(s,i))return WRONG;
				if(tmp.size()>20)return WRONG;
				StringToChar(tmp,ISBN);
				return SELECT;
			}
			else if(iden=="modify"){
				while(true){
					int shuangyin=0;
					string tmp("");f=0;
					for(;i<s.size();i++){
						if(s[i]==' '&&f&&(shuangyin%2==0))break;
						if(s[i]!=' ')f=1;
						else if(shuangyin%2==0)continue;
						tmp+=s[i];
						if(s[i]=='\"')shuangyin++;
					}
					if(tmp=="")break;
					if(tmp[0]!='-')return WRONG;
					if(tmp[1]=='I'){//ISBN
						string s(tmp,1,4);
						if(s!="ISBN")return WRONG;
						if(tmp[5]!='=')return WRONG;
						ISBN_flag=1;
						string s2(tmp,6,tmp.size()-6);
						if(s2.size()>20||s2.size()==0)return WRONG;
						StringToChar(s2,ISBN);
						continue;
					}
					else if(tmp[1]=='n'){
						string s(tmp,1,4);
						if(s!="name")return WRONG;
						if(tmp[5]!='=')return WRONG;
						name_flag=1;
						string s2(tmp,7,tmp.size()-8);
						if(tmp.size()<7||tmp[6]!='\"'||tmp[tmp.size()-1]!='\"')return WRONG;
						if(s2.size()>60||s2.size()==0)return WRONG;
						StringToChar(s2,name);
						continue;
					}
					else if(tmp[1]=='a'){
						string s(tmp,1,6);
						if(s!="author")return WRONG;
						if(tmp[7]!='=')return WRONG;
						author_flag=1;
						string s2(tmp,9,tmp.size()-10);
						if(tmp.size()<9||tmp[8]!='\"'||tmp[tmp.size()-1]!='\"')return WRONG;
						if(s2.size()>60||s2.size()==0)return WRONG;
						StringToChar(s2,author);
						continue;
					}
					else if(tmp[1]=='k'){
						string s(tmp,1,7);
						if(s!="keyword")return WRONG;
						if(tmp[8]!='=')return WRONG;
						keyword_flag=1;
						string s2(tmp,10,tmp.size()-11);
						if(tmp.size()<10||tmp[9]!='\"'||tmp[tmp.size()-1]!='\"')return WRONG;
						int top=0,last=0;
						for(int j=0;j<=s2.size();j++)if(s2[j]=='|'||j==s2.size()){
							string s3(s2,last,j-last);
							last=j+1;
							if(s3=="")return WRONG;
							keyword[++top]=s3;
						}
						continue;
					}
					else if(tmp[1]=='p'){
						string s(tmp,1,5);
						if(s!="price")return WRONG;
						if(tmp[6]!='=')return WRONG;
						price_flag=1;
						string s2(tmp,7,tmp.size()-7);
						char ss[20];
						StringToChar(s2,ss);
						price=atof(ss+1);
						continue;
					}
					
				}
				return MODIFY;
			}
			else if(iden=="import"){
				string tmp2("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp2+=s[i];
				}
				string tmp3("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp3+=s[i];
				}
				
				quantity=StringToInterger(tmp2);
				char q[30];
				memset(q,0,sizeof(q));
				StringToChar(tmp3,q);
				cost_price=atof(q+1);
				if(!check_empty(s,i))return WRONG;
				if(!quantity||fabs(cost_price)<1e-10)return WRONG;
				return IMPORT;
				
			}
			else if(iden=="show"){
				int y=0;
				while(++y){
					int shuangyin=0;
					string tmp("");f=0;
					for(;i<s.size();i++){
						if(s[i]==' '&&f&&(shuangyin%2==0))break;
						if(s[i]!=' ')f=1;
						else if(shuangyin%2==0)continue;
						tmp+=s[i];
						if(s[i]=='\"')shuangyin++;
					}
					if(tmp=="")break;
					if(tmp[0]!='-'){// handle show_finance
						if(tmp=="finance"&&y==1){
							if(check_empty(s,i))return SHOW_FINANCE;
							string tmp2("");f=0;
							for(;i<s.size();i++){
								if(s[i]==' '&&f)break;
								if(s[i]!=' ')f=1;
								else continue;
								tmp2+=s[i];
							}
							time=StringToInterger(tmp2);
							if(!time)return WRONG;
							return SHOW_FINANCE;
						}
						else return WRONG;
					}
					if(tmp[1]=='I'){//ISBN
						string s(tmp,1,4);
						if(s!="ISBN")return WRONG;
						if(tmp[5]!='=')return WRONG;
						ISBN_flag=1;
						string s2(tmp,6,tmp.size()-6);
						if(s2.size()>20||s2.size()==0)return WRONG;
						StringToChar(s2,ISBN);
						continue;
					}
					else if(tmp[1]=='n'){
						string s(tmp,1,4);
						if(s!="name")return WRONG;
						if(tmp[5]!='=')return WRONG;
						name_flag=1;
						string s2(tmp,7,tmp.size()-8);
						if(tmp.size()<7||tmp[6]!='\"'||tmp[tmp.size()-1]!='\"')return WRONG;
						if(s2.size()>60||s2.size()==0)return WRONG;
						StringToChar(s2,name);
						continue;
					}
					else if(tmp[1]=='a'){
						string s(tmp,1,6);
						if(s!="author")return WRONG;
						if(tmp[7]!='=')return WRONG;
						author_flag=1;
						string s2(tmp,9,tmp.size()-10);
						if(tmp.size()<9||tmp[8]!='\"'||tmp[tmp.size()-1]!='\"')return WRONG;
						if(s2.size()>60||s2.size()==0)return WRONG;
						StringToChar(s2,author);
						continue;
					}
					else if(tmp[1]=='k'){
						string s(tmp,1,7);
						if(s!="keyword")return WRONG;
						if(tmp[8]!='=')return WRONG;
						keyword_flag=1;
						string s2(tmp,10,tmp.size()-11);
						if(tmp.size()<10||tmp[9]!='\"'||tmp[tmp.size()-1]!='\"')return WRONG;
						int top=0,last=0;
						for(int j=0;j<=s2.size();j++)if(s2[j]=='|'||j==s2.size()){
							string s3(s2,last,j-last);
							last=j+1;
							if(s3=="")return WRONG;
							keyword[++top]=s3;
						}
						continue;
					}
					else if(tmp[1]=='p'){
						string s(tmp,1,5);
						if(s!="price")return WRONG;
						if(tmp[6]!='=')return WRONG;
						string s2(tmp,7,tmp.size()-7);
						char ss[20];
						StringToChar(s2,ss);
						price=atof(ss+1);
						continue;
					}
					
				}
				return SHOW;
			}
			else if(iden=="buy"){
				string tmp("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp+=s[i];
				}
				string tmp2("");f=0;
				for(;i<s.size();i++){
					if(s[i]==' '&&f)break;
					if(s[i]!=' ')f=1;
					else continue;
					tmp2+=s[i];
				}
				if(!check_empty(s,i))return WRONG;
				quantity=StringToInterger(tmp2);
				StringToChar(tmp,ISBN);
				return BUY;
			}
			//闂傚倸鍊搁崐椋庣矆娓氣偓楠炴牠顢曢埗鑺ョ☉铻栭柛娑卞幘閿涙瑩姊洪懡銈呮灈闁稿锕ら妴鎺撶節濮橆厾鍘遍柣蹇曞仜婢т粙濡撮幒妤佺厓缂備焦蓱閳锋帡鏌嶈閸撴瑧绮诲澶婄？闂侇剙鍗曢崶顒佸亱闁割偁鍩勫ù鍕攽椤斿浠滈柛瀣崌閺?
			else if(iden=="report"){
				return REPORT_FINANCE;
			}
			else if(iden=="log"){
				return LOG;
			}
			else return WRONG;
	}
};





bool check(string s){//闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁嶉崟顒佹闂佹悶鍎洪崜娆戝瑜版帗鐓涚€广儱楠搁獮鏍煢閸愵亜鏋涢柡灞剧洴婵＄兘顢欓悡搴交闂備礁鎲￠悷銉╂晝閵夆晛桅闁告洦鍨伴崘鈧梺闈浤涚仦鐐啇闂傚倷鑳堕…鍫燁殽閹间焦鏅濇い蹇撳濞兼牕鈹戦悩瀹犲闁绘劕锕弻銊モ攽閸℃ê娅㈡繝銏ｎ潐濞茬喎顫忕紒妯诲闁告稑锕ら弳鍫ユ煟閵忊晛鐏℃い銊ョ墦楠炴垿濮€閵堝懐锛滈梺缁樺灥濞层劎绮欒箛娑欌拺闁革富鍘奸。鍏肩節閵忊槅鐒界紒顔肩墕閻ｆ繈宕熼鍌氬箻闂備礁缍婇。锔剧矆娓氣偓閹﹢鎮╅悙鎴掔盎闂婎偄娲﹀ú鏍几閺冨倻纾奸弶鍫涘妼缁楁帡鏌ｉ敐鍡欑疄闁糕斁鍋撳銈嗗笒閸婄兘鎮炴繝鍥ㄧ厪濠电倯鍐伌婵炶偐鍠庨埞鎴︽偐缂佹ɑ閿銈嗗灥閹虫劗鍒掗崼銉ュ耿婵☆垵鍋愰鏇㈡⒑缁洖澧查柨姘辩磼濡烇箑鎳愮壕濂告煟濡櫣锛嶉柛娆屽亾闂?闂傚倸鍊搁崐鐑芥倿閿旈敮鍋撶粭娑樻噽閻瑩鏌熸潏楣冩闁搞倖鍔栭妵鍕冀椤愵澀绮剁紓浣哄У閼归箖濡撮幒鎴僵闁挎繂鎳嶆竟鏇㈡煟?
	ifstream it(s.c_str(),ios::in|ios::binary);
	if(!it)return 1;
	it.seekg(0,ios::end);
	if(it.tellg()==0){
		it.close();return 1;
	}
	it.close();
	return 0;
}
class Bignode{
	public:
	node_type a;//缂傚倸鍊搁崐鎼佸磹妞嬪孩顐介柨鐔哄Т绾捐顭块懜闈涘Е闁轰礁顑囬幉鎼佸籍閸繄鐣?
	int node_number;//list闂傚倸鍊搁崐鐑芥倿閿曞倹鍎戠憸鐗堝笒缁€澶屸偓鍏夊亾闁告洦鍋呭Σ顒勬⒑閸濆嫷妲规い鈺冪┅闂傚倸鍊搁崐宄懊归崶褜娴栭柕濞炬櫆閸婂潡鏌ㄩ弮鍌涙珪闁绘繂鐖奸弻娑㈠焺閸愮偓鈻?
	int next,prev;//闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁撻悩鑼唶闂佸憡绺块崕鎶芥儗閹剧粯鐓欑紓浣靛灩閺嬫稓绱掗悩宕囧濞ｅ洤锕俊鍫曞川椤斿吋顏犻梻鍌欐祰閿熴儵宕愰弽銊р攳濠电姴娲ゅ洿闂佸憡渚楅崰鏍р枍濠靛鈷戦悶娑掆偓鍏呭?
	int location;//闂傚倸鍊搁崐椋庣矆娴ｉ潻鑰块梺顒€绉查埀顒€鍊圭粋鎺斺偓锝庝簽閿涙盯姊洪崷顓炰壕闁告挻宀搁幃銏ゅ幢濞戞瑥浠梺鍛婄箓鐎氼參骞嗛崼鐔翠簻闊浄绲奸柇顖炴煛瀹€瀣？闁逞屽墾缂嶅棙绂嶅鍫濇辈闁绘劗鏁哥壕濂告煕鐏炲墽鈽夋繛鎼枤閳ь剚顔栭崰姘跺极婵犳艾绠栧ù鐘差儐閸嬨劑鏌℃担姝岊潶闁搞劏宕靛Σ?
	int node_list_begin;//闂傚倸鍊搁崐椋庣矆娴ｉ潻鑰块梺顒€绉埀顒婄畵瀹曠厧顭垮┑鍥ㄣ仢濠德ゅ煐瀵板嫭绻濋崟顓熸瘒濠电姷鏁告慨鎾晝閵堝鍋嬮柛鈩冪懅娑撳秹鏌曟径鍡樻珕闁绘挸鍟伴幉绋款煥閸繄顦┑鐐村灦閻熝囥€呴悜鑺ョ叆闁哄洨鍋涢埀顒€缍婂畷鎰版倻閼恒儳鍘介梺鐟邦嚟閸婃牠骞嬮敃鈧崥褰掓煙鏉堥箖妾柣鎾跺枛閺岋綁骞囬澶婃闂佸磭顑曢崐婵嬪蓟濞戙垹妫橀悹鎭掑妿閸旑垱绻?
	Bignode(){
		a=normal;
		node_number=0;
		next=prev=location=node_list_begin=0;
	}
	void display(){
		printf("number:%d prev:%d next:%d location:%d node first:%d\n",node_number,prev,next,location,node_list_begin);
	}
};
class node{
	public:
	node_type a;//闂傚倷娴囧畷鐢稿窗閹邦喖鍨濋幖娣灪濞呯姵淇婇妶鍛櫣缂佺姳鍗抽弻娑樷槈濮楀牊鏁惧┑鐐叉噽婵炩偓闁哄矉绲借灒闁兼祴鏅涚粭锟犳⒑缁嬪尅鍔熼柛蹇旓耿瀵鈽夐姀鈩冩珕闁荤姴娲﹁ぐ鍐不濞差亝鈷戝ù鍏肩懅缁夘剙霉濠婂骸澧版俊鍙夊姍楠炴帒螖婵犲啯娅囬梻渚€娼чˇ浠嬪窗閺嵮€鏋旀い鎾卞灪閳?
	long long key;int value;//闂傚倸鍊搁崐椋庣矆娓氣偓楠炴牠顢曚綅閸ヮ剦鏁嶉柣鎰皺閺屽牆顪冮妶鍡楀Ё缂佺姵鍨块幃鐐哄垂椤愮姳绨婚梺鐟版惈濡绂嶆ィ鍐┾拺闂傚牊绋撴晶娑㈡煙椤旂厧鈧悂顢氶敐澶樻晝闁挎梻绮弲锝夋⒑闂堟稓绠冲┑顔惧厴閺?
	int next,prev;//闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁撻悩鑼唶闂佸憡绺块崕鎶芥儗閹剧粯鐓欑紓浣靛灩閺嬫稓绱掗悩宕囧濞ｅ洤锕俊鍫曞礋椤栨侗鈧牗绻涚€电校鐎光偓缁嬫鍤曢柛顐ｆ礀闁卞洦鎱ㄥ鍡楀箺闁绘繃娲熷鐑樺濞嗘垵鍩岄悗瑙勬处閸撶喎锕㈡笟鈧娲箰鎼达絿鐣甸梺纭呮珪閸旀﹢宕愰幘顔解拻?
	int location;//闂傚倷娴囧畷鐢稿窗閹邦喖鍨濋幖娣灪濞呯姵淇婇妶鍛櫣缂佺姳鍗抽弻娑樷槈濮楀牊鏁惧┑鐐叉噽婵炩偓闁哄矉绲借灒婵炲棙鍎冲▓顓犵磽娴ｅ搫袨闁稿海鏁诲璇差吋閸偅顎囬梻浣告啞閹稿鎳濇ィ鍐炬晪闁靛鏅涚粈瀣亜閺嶃劍鐨戞い锔芥緲椤啴濡堕崱妤冪憪闂佺厧鍟块悥濂稿春閳ь剚銇勯幒鎴Ц闁哄鐩Λ浣瑰緞閹邦厾鍘藉┑鈽嗗灡鐎笛囨偟椤忓牊鐓涢悗锝庝簻椤忣偆绱掓潏銊﹀碍妞ゆ挸銈稿畷銊╊敊閸忕⒈浠辩紓?
	int head;//闂傚倸鍊搁崐椋庣矆娴ｉ潻鑰块梺顒€绉查埀顒€鍊圭粋鎺斺偓锝庝簽閿涙盯姊洪悷鏉库挃缂侇噮鍨跺畷鎰版偨閸涘﹦鍘介梺闈涚箳婵攱绂掑☉銏＄厱闁靛牆鍊告禍鍓х磽閸屾艾鈧兘姊藉澶婄鐎广儱顦伴崑鍌炴煥閻斿搫孝缂佺姵宀搁弻娑㈠箛闂堟稒鐏堢紓浣插亾闁糕剝菧娴滄粓鏌ㄥ☉妯侯仾妞ゃ儺妲榦de 闂傚倸鍊搁崐鐑芥倿閿曞倹鍎戠憸鐗堝笒缁€澶屸偓鍏夊亾闁逞屽墴閸┾偓妞ゆ帊绀侀崵顒€霉濠婂懎浠ф俊鍙夊姍閹瑩宕崟顐ょ崺婵＄偑鍊栭悧妤冨垝鎼淬劍鏅?
	node(){
		a=normal;
		key=0;
		value=0;
		next=prev=location=head=0;
	}
	void display(){
		printf("prev:%d next:%d location:%d\n",prev,next,location);
		printf("key:%lld value:%d\n",key,value);
	}
};
node Q[11000];int Top;
long long trans(String& s){
	long long ans=0;
	for(int i=1;;i++){
		if(s[i]=='\0')break;
		ans=(ans*233+s[i])%mod;
	}
	return ans;
}
class BlockLinkList{
	public:
	string F;//闂傚倸鍊风粈渚€骞栭位鍥敍閻愭潙浜辨繝鐢靛Т濞层倗绮绘导瀛樼厵闂傚倸顕ˇ锕傛煕濮樻剚娼愰柕鍥у楠炴﹢宕￠悙鍏告偅婵犵妲呴崑鍛存晝閵忋倕钃熸繛鎴欏灩鍞銈嗙墱閸嬬偤顢撳鍜佹富?
	fstream file;
	template<class T>
	T get(int location){//闂傚倸鍊搁崐鐑芥嚄閸洖纾块柣銏㈩焾閻ょ偓绻涢幋娆忕仾闁稿鍊濋弻鏇熺箾瑜嶇€氼厼鈻撴导瀛樷拺闁告繂瀚峰Σ褰掓煕閳轰胶澧︾€规洟娼ц灃濞达綁顥撶粻姘舵⒑闂堟稓澧曢柛濠傛啞缁傚秵銈ｉ崘鈹炬嫼缂備緡鍨卞ú妯衡枍閸涱喓浜滈柡鍌氱仢閻撶剮ation婵犵數濮烽弫鎼佸磻閻樿绠垫い蹇撴缁躲倝鏌ｉ敐鍛伇闁活厽鎹囬弻娑㈩敃閿濆棛顦ㄩ梺绋款儛娴滎亪寮诲☉銏犵労闁告劦浜栨慨鍥⒑缁嬪潡顎楃紒澶婄秺瀵鈽夐姀鐘插祮闂侀潧顭堥崕鎵姳閼姐倗纾?
		file.open(F.c_str(),ios::binary|ios::in);
		file.seekg(location);
		T a;
		file.read(reinterpret_cast<char *> (&a),sizeof(a));
		file.close();
		return a;
	}
	long long get_begin_node(Bignode& h){//闂傚倷娴囬褍霉閻戣棄鏋侀柛娑橈攻濞呯姵淇婇妶鍛櫡闁逞屽墮閸熸潙鐣烽妸鈺佺骇闁瑰鍋炶ⅲ闂備浇顕ф鎼侇敋閺嶎厼鐐婇柕濞у啫绠洪梻鍌欑窔濞佳団€﹂崼銉ョ？闂侇剙绋侀弫鍌涖亜閹板墎绁峰ù婊勭矒閺岀喓鈧稒顭囩粻鏍ь熆鐠哄搫顏紒杈ㄥ笧閳ь剨缍嗘禍璺何熼埀顒勬⒑缁洘鏉归柛瀣尭椤啴濡堕崱妤冪憪闂佺厧鍟块悥濂稿春閵忋倕绫嶉柛顐ゅ枔閸樿棄鈹戦绛嬬劸濡炴潙鎽滄禍鎼併€€閸ф鈷?
		node begin=get<node>(h.node_list_begin);
		node first=get<node>(begin.next);
		return first.key;
	}
	template<class T>
	void updata(T& a){//闂傚倸鍊搁崐椋庣矆娓氣偓楠炴牠顢曢埛姘そ婵¤埖寰勭€ｎ亙妲愰梻渚€娼ц墝闁哄懏鐩幏鎴︽偄鐏忎焦鏂€闂佺粯锚瀵爼骞栭幇顓濈箚妞ゆ劧缍囬懓鍧楁煛鐏炲墽娲村┑锛勫厴椤㈡盯鎮欓幖顓涘亾瀹ュ拋娓?
		file.open(F.c_str(),ios::in|ios::out|ios::binary);
		file.seekp(a.location);
		file.write(reinterpret_cast<const char *> (&a),sizeof(a));
		file.close();
	}
	template<class T>
													
						 
						  
															
			   
  
	void foundinend(T& a){
		file.open(F.c_str(),ios::in|ios::out|ios::binary);
		file.seekp(0,ios::end);
		a.location=file.tellp();
		file.write(reinterpret_cast<const char *> (&a),sizeof(a));
		file.close();
	}
	node getend(node a){
		while(a.a!=End)
			a=get<node>(a.next);
		return a;
	}
	void getprev(node a,long long key){
		while(true){
			if(a.a==Begin){
				Bignode c=get<Bignode>(a.head);
				c=get<Bignode>(c.prev);
				if(c.a==Begin)break;
				a=getend(get<node>(c.node_list_begin));
			}
			if(a.a==End)a=get<node>(a.prev);
			if(a.a!=normal)break;
			
			if(a.key==key){
				Q[++Top]=a;
				a=get<node>(a.prev);
			}
			else break;
		}
		return ;
		
	}
	void getnext(node a,long long key,int flag=0){
		while(true){
			if(a.a==End){
				Bignode c=get<Bignode>(a.head);
				c=get<Bignode>(c.next);
				if(c.a==End)break ;
				a=get<node>(c.node_list_begin);
			}
			if(a.a==Begin)a=get<node>(a.next);
			if(a.a!=normal)break ;
			if(a.key==key||flag){
				Q[++Top]=a;
				a=get<node>(a.next);
			}
			else break;
		}
		return ;
	}
	void bianli(){
		Top=0;
		Bignode x=get<Bignode>(0);
		x=get<Bignode>(x.next);
		node a=get<node>(x.node_list_begin);
		getnext(a,a.key,1);
	}
	int get_node_number(Bignode& a){
		if(a.a!=normal)return 0;
		node x=get<node>(a.node_list_begin);
		x=get<node>(x.next);
		int sum=0;
		while(x.a!=End){
			sum++;
			x=get<node>(x.next);
		}
		return sum;
	}
	void updata_head(node a){
		node x=a;
		while(true){
			x.head=get<node>(x.prev).head;
			updata(x);
			if(x.a==End)break;
			x=get<node>(x.next);
		}
	}
	void split(Bignode& a){
		/*	node_type a;//闂傚倷娴囧畷鐢稿窗閹邦喖鍨濋幖娣灪濞呯姵淇婇妶鍛櫣缂佺姳鍗抽弻娑樷槈濮楀牊鏁惧┑鐐叉噽婵炩偓闁哄矉绲借灒闁兼祴鏅涚粭锟犳⒑缁嬪尅鍔熼柛蹇旓耿瀵鈽夐姀鈩冩珕闁荤姴娲﹁ぐ鍐不濞差亝鈷戝ù鍏肩懅缁夘剙霉濠婂骸澧版俊鍙夊姍楠炴帒螖婵犲啯娅囬梻渚€娼чˇ浠嬪窗閺嵮€鏋旀い鎾卞灪閳?
		String key;int value;//闂傚倸鍊搁崐椋庣矆娓氣偓楠炴牠顢曚綅閸ヮ剦鏁嶉柣鎰皺閺屽牆顪冮妶鍡楀Ё缂佺姵鍨块幃鐐哄垂椤愮姳绨婚梺鐟版惈濡绂嶆ィ鍐┾拺闂傚牊绋撴晶娑㈡煙椤旂厧鈧悂顢氶敐澶樻晝闁挎梻绮弲锝夋⒑闂堟稓绠冲┑顔惧厴閺?
		int next,prev;//闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁撻悩鑼唶闂佸憡绺块崕鎶芥儗閹剧粯鐓欑紓浣靛灩閺嬫稓绱掗悩宕囧濞ｅ洤锕俊鍫曞礋椤栨侗鈧牗绻涚€电校鐎光偓缁嬫鍤曢柛顐ｆ礀闁卞洦鎱ㄥ鍡楀箺闁绘繃娲熷鐑樺濞嗘垵鍩岄悗瑙勬处閸撶喎锕㈡笟鈧娲箰鎼达絿鐣甸梺纭呮珪閸旀﹢宕愰幘顔解拻?
		int location;//闂傚倷娴囧畷鐢稿窗閹邦喖鍨濋幖娣灪濞呯姵淇婇妶鍛櫣缂佺姳鍗抽弻娑樷槈濮楀牊鏁惧┑鐐叉噽婵炩偓闁哄矉绲借灒婵炲棙鍎冲▓顓犵磽娴ｅ搫袨闁稿海鏁诲璇差吋閸偅顎囬梻浣告啞閹稿鎳濇ィ鍐炬晪闁靛鏅涚粈瀣亜閺嶃劍鐨戞い锔芥緲椤啴濡堕崱妤冪憪闂佺厧鍟块悥濂稿春閳ь剚銇勯幒鎴Ц闁哄鐩Λ浣瑰緞閹邦厾鍘藉┑鈽嗗灡鐎笛囨偟椤忓牊鐓涢悗锝庝簻椤忣偆绱掓潏銊﹀碍妞ゆ挸銈稿畷銊╊敊閸忕⒈浠辩紓?
		int head;*/
		/*
		node_type a;//缂傚倸鍊搁崐鎼佸磹妞嬪孩顐介柨鐔哄Т绾捐顭块懜闈涘Е闁轰礁顑囬幉鎼佸籍閸繄鐣?
		int node_number;//list闂傚倸鍊搁崐鐑芥倿閿曞倹鍎戠憸鐗堝笒缁€澶屸偓鍏夊亾闁告洦鍋呭Σ顒勬⒑閸濆嫷妲规い鈺冪┅闂傚倸鍊搁崐宄懊归崶褜娴栭柕濞炬櫆閸婂潡鏌ㄩ弮鍌涙珪闁绘繂鐖奸弻娑㈠焺閸愮偓鈻?
		int next,prev;//闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁撻悩鑼唶闂佸憡绺块崕鎶芥儗閹剧粯鐓欑紓浣靛灩閺嬫稓绱掗悩宕囧濞ｅ洤锕俊鍫曞川椤斿吋顏犻梻鍌欐祰閿熴儵宕愰弽銊р攳濠电姴娲ゅ洿闂佸憡渚楅崰鏍р枍濠靛鈷戦悶娑掆偓鍏呭?
		int location;//闂傚倸鍊搁崐椋庣矆娴ｉ潻鑰块梺顒€绉查埀顒€鍊圭粋鎺斺偓锝庝簽閿涙盯姊洪崷顓炰壕闁告挻宀搁幃銏ゅ幢濞戞瑥浠梺鍛婄箓鐎氼參骞嗛崼鐔翠簻闊浄绲奸柇顖炴煛瀹€瀣？闁逞屽墾缂嶅棙绂嶅鍫濇辈闁绘劗鏁哥壕濂告煕鐏炲墽鈽夋繛鎼枤閳ь剚顔栭崰姘跺极婵犳艾绠栧ù鐘差儐閸嬨劑鏌℃担姝岊潶闁搞劏宕靛Σ?
		int node_list_begin;//闂傚倸鍊搁崐椋庣矆娴ｉ潻鑰块梺顒€绉埀顒婄畵瀹曠厧顭垮┑鍥ㄣ仢濠德ゅ煐瀵板嫭绻濋崟顓熸瘒濠电姷鏁告慨鎾晝閵堝鍋嬮柛鈩冪懅娑撳秹鏌曟径鍡樻珕闁绘挸鍟伴幉绋款煥閸繄顦┑鐐村灦閻熝囥€呴悜鑺ョ叆闁哄洨鍋涢埀顒€缍婂畷鎰版倻閼恒儳鍘介梺鐟邦嚟閸婃牠骞嬮敃鈧崥褰掓煙鏉堥箖妾柣鎾跺枛閺岋綁骞囬澶婃闂佸磭顑曢崐婵嬪蓟濞戙垹妫橀悹鎭掑妿閸旑垱绻?
		*/
		
		if(a.a!=normal)return ;
		Bignode next_Bignode=get<Bignode>(a.next);
		Bignode new_Bignode;
		foundinend(new_Bignode);
		new_Bignode.a=normal;
		new_Bignode.prev=a.location;
		new_Bignode.next=next_Bignode.location;
		
		next_Bignode.prev=new_Bignode.location;
		a.next=new_Bignode.location;
		
		
		
		int number=a.node_number/2;
		int sum=0;
		node x=get<node>(a.node_list_begin);
		
		x=get<node>(x.next);
		for(int i=1;i<=number;i++)
			x=get<node>(x.next);
		node y=get<node>(x.next);
		
		node new_end_node,new_begin_node;
		foundinend(new_begin_node);
		foundinend(new_end_node);
		
		new_begin_node.a=Begin;
		new_end_node.a=End;
		
		new_begin_node.next=y.location;
		new_begin_node.head=new_Bignode.location;
		y.prev=new_begin_node.location;
		y.head=new_Bignode.location;
		updata_head(y);
		
		x.next=new_end_node.location;
		new_end_node.prev=x.location;
		
		new_Bignode.node_list_begin=new_begin_node.location;
		
		
		updata(a);updata(next_Bignode);updata(new_Bignode);
		updata(x);updata(y);updata(new_begin_node);updata(new_end_node);
		
		new_Bignode.node_number=get_node_number(new_Bignode);
		a.node_number=get_node_number(a);
		
		updata(a);updata(next_Bignode);
	}
	
	node find(long long key){
		Bignode x=get<Bignode>(0);
		x=get<Bignode>(x.next);
		while(true){
			if(get<Bignode>(x.next).a==End)break;
			Bignode c=get<Bignode>(x.next);
			if(get_begin_node(c)>key)break;
			x=c;
		}
		node y=get<node>(x.node_list_begin);
		while(true){
			if(get<node>(y.next).a==End)break;
			node c=get<node>(y.next);
			if(c.key>key)break;
			y=c;
		}
		
		if(y.key==key){
			Top=0;
			getprev(y,key);
			getnext(y,key);
			return y;
		}
		return y;
	}
	void initialization(string s){
		F=s;
		if(!check(s)){
			//file.open(F.c_str(),ios::out|ios::in|ios::binary);
			return;
		}
		file.open(F.c_str(),ios::binary|ios::out);
		file.close();
		//file.open(F.c_str(),ios::out|ios::in|ios::binary);
		Bignode x,y,z;
		x.a=Begin;y.a=normal,z.a=End;
		foundinend(x),foundinend(y),foundinend(z);
		x.next=y.location;z.prev=y.location;
		y.prev=x.location,y.next=z.location;
		
		
		node a,b;
		foundinend(a);foundinend(b);
		a.a=Begin,b.a=End;
		a.head=b.head=y.location;
		foundinend(a),foundinend(b);
		a.next=b.location;b.prev=a.location;
		
		y.node_list_begin=a.location;
		
		updata(a),updata(b),updata(x),updata(y),updata(z);
		return ;
	}
	void erase_a_node(node& now){
		node pre,nex;
		if(now.a!=normal)return ;
		pre=get<node>(now.prev),nex=get<node>(now.next);
		pre.next=nex.location,nex.prev=pre.location;
		Bignode h=get<Bignode>(pre.head);
		h.node_number--;
		updata(pre),updata(nex),updata(h);
	}
	void found_a_node(String Key,int value){
		long long key=trans(Key);
		node y=find(key);
		
		
		node nex=get<node>(y.next);
		node now;
		now.head=nex.head;
		now.key=key,now.value=value;
		foundinend(now);
		nex.prev=now.location;y.next=now.location;
		now.prev=y.location;now.next=nex.location;
		now.a=normal;
		updata(now),updata(y),updata(nex);
		Bignode c=get<Bignode>(y.head);
		c.node_number++;
		updata(c);
		if(c.node_number>2*block)split(c);
	}
	
	void display(){
		Bignode x=get<Bignode>(0);
		x=get<Bignode>(x.next);
		node y=get<node>(x.node_list_begin);
		y=get<node>(y.next);
		printf("\n");
		printf("\n");
		while(true){
			if(y.a==End)break;
			y.display();
			y=get<node>(y.next);
		}
		printf("\n");
		printf("\n");
	}
};

//void found(String a,int value)
//node find (String key)
//闂傚倸鍊搁崐鐑芥嚄閸洩缍栭悗锝庡枛缁€瀣煕椤垵浜為柡鍡╁幖閳规垿鎮╅幇浣告櫛闂佸摜濮甸〃濠囩嵁閸愵喖纾奸柣鎰蔼閹芥洟鎮峰鍕棃闁绘侗鍣ｉ獮瀣晝閳ь剛绮诲☉銏＄厓閻熸瑥瀚崝銈吤?




BlockLinkList USER_index;
class user_node{
	public:
	String name,user_id,passwd;
	int pri,location;
	user_node(){
		pri=location=0;
		name=user_id=passwd=(string)("");
	}
	void display(){
		printf("%s %s %s %d %d\n",user_id.s+1,name.s+1,passwd.s+1,pri,location);
	}
}unknown;//闂傚倸鍊搁崐椋庣矆娓氣偓楠炴牠顢曢敂钘変罕濠电姴锕ょ€氼噣銆呴弻銉︾厽闁归偊鍘鹃妶鎾煛鐎ｎ亞效闁哄本娲樺鍕醇濠靛柈鈺傜箾鐎涙鐭婄紓宥咃躬瀵鏁撻悩鑼€為梺瀹犳〃缁插潡鏁愭径瀣幐闂佺硶鍓濋〃鍫㈢不婵犳碍鐓?
class USER{//闂傚倸鍊搁崐鐑芥倿閿曗偓椤啴宕归鍛姺闂佺鍕垫當缂佲偓婢跺备鍋撻獮鍨姎妞わ富鍨跺浼村Ψ閿斿墽顔曢梺鐟邦嚟閸嬬喖骞婇崨瀛樼厓闁荤喐澹嗘晥闂佸搫鑻粔褰掑春閳╁啯濯撮柛娑橈攻椤撹法绱?
	public:
	string F;
	fstream file;
	user_node now;//闂傚倷娴囧畷鐢稿窗閹邦喖鍨濋幖娣灪濞呯姵淇婇妶鍛櫣缂佺姳鍗抽弻娑樷槈濮楀牊鏁惧┑鐐叉噽婵炩偓闁哄矉绲借灒闁兼祴鏅涚粭锟犳⒑缁嬫鍎嶉柛鏃€鍨垮濠氬即閻旇櫣鐦堥棅顐㈡处濞叉粓寮抽悩缁樷拺?
	template<class T>
	void updata(T& a){//闂傚倸鍊搁崐椋庣矆娓氣偓楠炴牠顢曢埛姘そ婵¤埖寰勭€ｎ亙妲愰梻渚€娼ц墝闁哄懏鐩幏鎴︽偄鐏忎焦鏂€闂佺粯锚瀵爼骞栭幇顓濈箚妞ゆ劧缍囬懓鍧楁煛鐏炲墽娲村┑锛勫厴椤㈡盯鎮欓幖顓涘亾瀹ュ拋娓?
		file.open(F.c_str(),ios::in|ios::out|ios::binary);
		//assert(file.good());
		file.seekp(a.location);
		file.write(reinterpret_cast<const char *> (&a),sizeof(a));
		file.close();
	}
	template<class T>//闂傚倸鍊搁崐椋庢濮橆剦鐒介柤濮愬€栫€氬鏌ｉ弮鍌氬付缂佲偓婢跺备鍋撻獮鍨姎妞わ富鍨跺畷娆撴偐缂佹鍘遍梺纭呭焽閸斿秴鈻嶉崶銊ｄ簻闁冲搫鍟崢鎾煙椤旀娼愰柕鍫畵楠炴劖鎯旈璇叉憢闂傚倷绀侀幗婊堝窗閹扮増鍋傞柨鐔哄Т閽冪喐绻涢幋娆忕仼缂佺姵濞婇弻鐔煎箚瑜忔禍顏呬繆閹绘帞澧㈢紒杈ㄦ崌瀹曟帒顫濋钘変壕鐟滅増甯掔粻浼存煠婵劕鈧鎯屽▎蹇ｇ唵闁兼悂娼ф慨鍥煟閹烘垹浠涢柕鍥у楠炴帒顓奸崼婵嗗腐闂備礁纾划顖氼潖瑜版帒桅闁告洦鍠氶悿鈧梺鍦亾濞兼瑥鈻嶉妶澶嬧拺缂備焦蓱鐏忋劑鏌涚€ｎ偅灏电紒杈ㄦ崌瀹曟帒鈻庨幋锝囩崶闂備胶顭堥鍛此囬悽鎼炩偓浣割潩閹颁焦鈻岄梻浣筋嚃閸犳銆冩繝鍥х畺婵犲﹤鐗婇崵宥夋煏婢舵盯妾柣婵愬亰濮婅櫣鎷犻懠顒傤唺闂佺顑嗛惄顖炲春閳ь剚銇勯幒鎴濃偓鎼佸几鎼淬劍鐓熸繝鍨姇閻忥箓鏌＄仦绋垮⒉鐎垫澘瀚板畷鍗炍熼懡銈呯稻闂傚倷绀侀幖顐ゆ偖椤愶箑绀夌€光偓閳ь剟宕ｉ崨瀛樷拺闁告繂瀚埢澶愭煕濡灝浜圭紒顔肩墦瀹曟帡鎮欑€电骞愰梻浣稿閸嬩線宕瑰ú顏勬辈闁冲搫鍟扮壕鐓庮熆鐠轰警鐓柛銈囧枔缁?
	void foundinend(T& a){
		file.open(F.c_str(),ios::in|ios::out|ios::binary);
		file.seekp(0,ios::end);
		a.location=file.tellp();
		file.write(reinterpret_cast<const char *> (&a),sizeof(a));
		file.close();
	}
	user_node get(int location){
		file.open(F.c_str(),ios::in|ios::out|ios::binary);
		file.seekg(location);
		user_node a;
		file.read(reinterpret_cast<char *> (&a),sizeof(a));
		file.close();
		return a;
	}
	
	void init(int x){
		F="user.txt";
		if(check(F)){
			file.open(F.c_str(),ios::out|ios::binary);
			file.close();
			//file.open(F.c_str(),ios::in|ios::out|ios::binary);
		}
		//else file.open(F.c_str(),ios::in|ios::out|ios::binary);
		USER_index.initialization("USER_index.txt");
		now=unknown;
		if(x==0){
			user_node root;
			root.user_id=root.name=(String)(string)("root");
			root.passwd=(String)(string)("sjtu");
			root.pri=7;
			foundinend(root);
			USER_index.found_a_node(root.user_id,root.location);
			now=root;
		}
		now=get(0);
	}
	void logout(){
		now=unknown;
	}
	void Su(String& user_id,String& passwd){
		node c=USER_index.find(trans(user_id));
		if(c.key!=trans(user_id))throw 1;
		user_node a=get(c.value);
		if(now.pri>a.pri){
			now=a;
			return ;
		}
		if(cmp(a.passwd,passwd))throw 1;
		now=a;
	}
	void Useradd(String& user_id,String& passwd,int pri,String& name){
		if(now.pri<=pri||(pri!=7&&pri!=3&&pri!=1))throw 1;
		node b=USER_index.find(trans(user_id));
		if(b.key==trans(user_id))throw 1;
		user_node a;a.user_id=user_id,a.passwd=passwd,a.pri=pri,a.name=name;
		foundinend(a);
		USER_index.found_a_node(user_id,a.location);
	}
	void Register(String& user_id,String& passwd,String& name){
		node b=USER_index.find(trans(user_id));
		if(b.key==trans(user_id))throw 1;
		user_node a;a.user_id=user_id,a.passwd=passwd,a.pri=1,a.name=name;
		foundinend(a);
		USER_index.found_a_node(user_id,a.location);
	}
	void Delete(String& user_id){
		node b=USER_index.find(trans(user_id));
		if(b.key!=trans(user_id))throw 1;
		USER_index.erase_a_node(b);
	}
	void Passwd(String& user_id,String& old_passwd,String& passwd){
		node b=USER_index.find(trans(user_id));
		if(b.key!=trans(user_id))throw 1;
		user_node a=get(b.value);
		if(!cmp(now.user_id,roooot)){
			a.passwd=old_passwd;
			updata(a);
			return;
		}
		if(cmp(a.passwd,old_passwd))throw 1;
		a.passwd=passwd;
		updata(a);
	}
}USER_it;

class LOG{
	public:
	string F;
	fstream file;
	int getsum(){
		file.open(F.c_str(),ios::in|ios::out|ios::binary);
		file.seekg(0,ios::end);
		int k=file.tellg();file.close();
		return k/sizeof(pair<double,double>);
	}
	template<class T>
	T get(int location){//闂傚倸鍊搁崐鐑芥嚄閸洖纾块柣銏㈩焾閻ょ偓绻涢幋娆忕仾闁稿鍊濋弻鏇熺箾瑜嶇€氼厼鈻撴导瀛樷拺闁告繂瀚峰Σ褰掓煕閳轰胶澧︾€规洟娼ц灃濞达綁顥撶粻姘舵⒑闂堟稓澧曢柛濠傛啞缁傚秵銈ｉ崘鈹炬嫼缂備緡鍨卞ú妯衡枍閸涱喓浜滈柡鍌氱仢閻撶剮ation婵犵數濮烽弫鎼佸磻閻樿绠垫い蹇撴缁躲倝鏌ｉ敐鍛伇闁活厽鎹囬弻娑㈩敃閿濆棛顦ㄩ梺绋款儛娴滎亪寮诲☉銏犵労闁告劦浜栨慨鍥⒑缁嬪潡顎楃紒澶婄秺瀵鈽夐姀鐘插祮闂侀潧顭堥崕鎵姳閼姐倗纾介柛灞炬皑灏忕紓浣藉煐閼归箖锝炶箛鎾佹椽顢旈崨顓燁吇闂備胶鍘ч幗婊堝极閹间礁违濠电姴鍊甸弨浠嬫煟閹邦剛鎽犵紓宥嗗灦閵囧嫰鏁冮崒娆愬枤闂佺硶鏂侀崑鎾愁渻閵堝棗绗掗柛濠傜秺瀵娊顢楅崟顒傚帗閻熸粍绮撳畷婊冾潩鏉堚晝鐓撻梺鐟板⒔缁垶宕电仦杞挎棃鏁愰崨顓熸闂佺粯鎸婚惄顖炲蓟濞戙埄鏁冮柨婵嗙墕椤ユ繃绻涚€涙鐭掔紒鐘崇墪椤繐煤椤忓嫬绐涙繝鐢靛Т閹冲酣藟濠靛棌鏀介柣鎰摠缂嶆垿鏌涢姀锛勫弨闁糕斂鍨介獮妯兼嫚閼碱剦鍚呴梻浣虹帛閸旀牕顭囧▎鎿冩晛闁瑰墽绮崐鍨殽閻愯尙浠㈤柛鏃€纰嶇换娑氫沪閸屾艾顫囬悗?
		file.open(F.c_str(),ios::in|ios::binary);
		file.seekg(-location,ios::end);
		T a;
		file.read(reinterpret_cast<char *> (&a),sizeof(a));
		file.close();
		return a;
	}
	template<class T>
	void foundinend(T& a){
		//assert(file.good());
		file.open(F.c_str(),ios::in|ios::out|ios::binary);
		file.seekp(0,ios::end);
		file.write(reinterpret_cast<const char *> (&a),sizeof(a));
		file.close();
	}
	void init(){
		F="finance.txt";
		if(check(F)){
			file.open(F.c_str(),ios::out|ios::binary);
			pair<double,double> a=make_pair(0,0);
			file.write(reinterpret_cast<char* >(&a),sizeof(a));
			file.close();
		//	file.open(F.c_str(),ios::in|ios::out|ios::binary);
		}
		//else file.open(F.c_str(),ios::in|ios::out|ios::binary);
	}
	void found(double money,int id){//flag{ 0 :cost 1: income}
		pair<double,double> a;
		if(id==0)a=make_pair(money,0);
		else a=make_pair(0,money);
		pair<double,double> last=get<pair<double,double> >((sizeof (pair<double,double>)));
		a.first+=last.first,a.second+=last.second;
		foundinend(a);
	}
	
	pair<double,double> 
		find(int key){//闂傚倸鍊搁崐鐑芥嚄閸洖绠犻柟鍓х帛閸婅埖鎱ㄥΟ鎸庣【缁炬儳娼￠弻鐔煎箚閻楀牜妫勯梺鍝勫閸庢娊鍩€椤掆偓閸樻粓宕戦幘缁樼厱闁哄洢鍔屾禍婊堟煟濠靛浄鑰挎慨濠冩そ閺屽懘鎮欓懠璺侯伃婵犫拃灞界仭缂佺粯鐩幃鈩冩償椤旀儳鎮戞俊銈囧Х閸嬫盯鎮ц箛鏇犵＝闁瑰墽绮崑澶愭煛閸モ晛浜归柡鈧禒瀣厽闁归偊鍓欑痪褔鏌ㄥ☉娆愨拻缂佽鲸甯楀蹇涘Ω閿旂虎妲梻浣哥－缁垶骞戦崶顒傚祦閻庯綆鍠楅崐椋庣磽閸垹校闁哥偛顦扮换婵嬫偨闂堟稐娌梺鎼炲妼婢у酣宕氶幒鎴悑闁割偅绋愬Ч妤€鈹戦悙鏉戠仧闁搞劍妞介幃鈥斥枎閹炬潙鈧灚绻涢幋鐐垫噽闁绘帟妫勯…鑳槼濠电偛锕璇差吋閸偅顎囬梻浣告啞閹稿鎮烽埡鍛祦濠电姴鍟崕鐔兼煥濞戞ê顏繛鍫ョ畺濮婅櫣绱掑鍡欏姼濡炪倖娉﹂崨顖滅劶闂佸憡娲﹂崹閬嶆偂閻斿吋鐓欓悗鐢殿焾閳ь剚鐗犻獮瀣晝閳ь剛绮诲顓犵闁糕剝顨堢拹?
		if(!key)key=getsum()-1;
		double income=0,pay=0;
		pair<double,double> a=get<pair<double,double> >((sizeof (pair<double,double>))*(key+1));
		pair<double,double> b=get<pair<double,double> >((sizeof (pair<double,double>))*(1));
		pay=b.first-a.first,
		income=b.second-a.second;
		return make_pair(pay,income);
	}
}LOG_it;


class book{//婵犵數濮烽弫鎼佸磻閻愬搫鍨傞悹杞扮秿濞戙垹绠ｉ柣妯哄悁缁楀姊洪悷閭﹀殶濠殿喚鍋撻幈銊╁箮閼恒儮鎷哄銈嗗坊閸嬫挾绱掓径瀣唉鐎殿喕鍗虫俊鐑藉煛閸屾粌骞楅梻浣烘嚀椤曨參宕愰弽顓炵闁挎洍鍋撶紒鐙€鍨跺娲敆閳ь剛绮旈悽鍛婂亗闁哄洨鍠嶇换鍡涙煏閸繂顏柛鏂跨Ф閻ヮ亪骞戦幇顒€鎯炵紓?
	public:
	String ISBN,author,name,keyword[10];
	int location;//闂傚倸鍊峰ù鍥х暦閸偅鍙忛柟鎯板Г閸婂潡鏌ㄩ弴妤€浜惧銈庡幖閻忔繆鐏掗梺鍏肩ゴ閺呮繈藝椤栫偞鍊垫鐐茬仢閸旀碍銇勯敂璇茬仯缂侇喖鐗撳畷鎺楁倷閺夋垳鍖栭梻浣瑰劤缁绘帡骞婇幘璇茬閻庯綆鍠楅ˉ濠冦亜閹烘埈妲稿褎鎸抽弻鈥崇暆鐎ｎ剛鐦堥悗瑙勬礃鐢帡锝炲┑瀣垫晣闁绘﹢娼ч獮鈧繝鐢靛Х閺佹悂宕戝☉妯滄稒鎯旈妸銉ョ€梺鎯х箰濠€閬嶆儗濞嗗浚鐔嗛柤鎼佹涧婵箓鏌℃担鍛婂枠闁哄矉绲借灒闁惧繒娅㈢槐鐐烘⒑閸濆嫭顥犲┑顔炬暩閹广垹鈽夊▎鎰Ф闂佸憡鎸嗛崘銊у帓缂傚倸鍊风粈渚€藝椤栫偞鍋夊┑鍌滎焾缁?
	double price;
	int quantity;
	bool ISBN_flag,author_flag,name_flag,keyword_flag,price_flag;
	book(){
		ISBN=author=name=nullll;
		for(int i=0;i<9;i++)keyword[i]=nullll;
		location=price=quantity=0;
	}
	void display(){
		printf("%s\t%s\t%s\t",ISBN.s+1,name.s+1,author.s+1);
		for(int i=1;;i++){
			if(!cmp(keyword[i],nullll)){
				break;
			}
			else {
				if(i==1)printf("%s",keyword[i].s+1);
				else printf("|%s",keyword[i].s+1);
			}
		}
		printf("\t%.2lf\t",price);
		printf("%d本\n",quantity);
	}
	bool operator!=(book& c){
		if(cmp(ISBN,c.ISBN)||cmp(author,c.author)||cmp(name,c.name)||cmp(keyword[1],c.keyword[1]))return 1;
		if(location!=c.location||fabs(price-c.price)>1e-9)return 1;
		if(quantity!=c.quantity)return 1;
		return 0;
	}
	bool operator==(book& c){
		return !(*this!=c);
	}
}unknownn,q[11000];int top=0;
bool cmp2(book& a,book& b){return cmp(a.ISBN,b.ISBN)==-1;}
BlockLinkList author_index,ISBN_index,name_index,keyword_index;

class BOOK{
	public:
	string F;
	fstream file;
	book now;bool select_flag;
	template<class T>
	void updata(T& a){//闂傚倸鍊搁崐椋庣矆娓氣偓楠炴牠顢曢埛姘そ婵¤埖寰勭€ｎ亙妲愰梻渚€娼ц墝闁哄懏鐩幏鎴︽偄鐏忎焦鏂€闂佺粯锚瀵爼骞栭幇顓濈箚妞ゆ劧缍囬懓鍧楁煛鐏炲墽娲村┑锛勫厴椤㈡盯鎮欓幖顓涘亾瀹ュ拋娓?

		file.open(F.c_str(),ios::in|ios::out|ios::binary);
		file.seekp(a.location);
		file.write(reinterpret_cast<const char *> (&a),sizeof(a));
		file.close();
	}
	template<class T>//闂傚倸鍊搁崐椋庢濮橆剦鐒介柤濮愬€栫€氬鏌ｉ弮鍌氬付缂佲偓婢跺备鍋撻獮鍨姎妞わ富鍨跺畷娆撴偐缂佹鍘遍梺纭呭焽閸斿秴鈻嶉崶銊ｄ簻闁冲搫鍟崢鎾煙椤旀娼愰柕鍫畵楠炴劖鎯旈璇叉憢闂傚倷绀侀幗婊堝窗閹扮増鍋傞柨鐔哄Т閽冪喐绻涢幋娆忕仼缂佺姵濞婇弻鐔煎箚瑜忔禍顏呬繆閹绘帞澧㈢紒杈ㄦ崌瀹曟帒顫濋钘変壕鐟滅増甯掔粻浼存煠婵劕鈧鎯屽▎蹇ｇ唵闁兼悂娼ф慨鍥煟閹烘垹浠涢柕鍥у楠炴帒顓奸崼婵嗗腐闂備礁纾划顖氼潖瑜版帒桅闁告洦鍠氶悿鈧梺鍦亾濞兼瑥鈻嶉妶澶嬧拺缂備焦蓱鐏忋劑鏌涚€ｎ偅灏电紒杈ㄦ崌瀹曟帒鈻庨幋锝囩崶闂備胶顭堥鍛此囬悽鎼炩偓浣割潩閹颁焦鈻岄梻浣筋嚃閸犳銆冩繝鍥х畺婵犲﹤鐗婇崵宥夋煏婢舵盯妾柣婵愬亰濮婅櫣鎷犻懠顒傤唺闂佺顑嗛惄顖炲春閳ь剚銇勯幒鎴濃偓鎼佸几鎼淬劍鐓熸繝鍨姇閻忥箓鏌＄仦绋垮⒉鐎垫澘瀚板畷鍗炍熼懡銈呯稻闂傚倷绀侀幖顐ゆ偖椤愶箑绀夌€光偓閳ь剟宕ｉ崨瀛樷拺闁告繂瀚埢澶愭煕濡灝浜圭紒顔肩墦瀹曟帡鎮欑€电骞愰梻浣稿閸嬩線宕瑰ú顏勬辈闁冲搫鍟扮壕?
	void foundinend(T& a){
		file.open(F.c_str(),ios::in|ios::out|ios::binary);

		file.seekp(0,ios::end);
		a.location=file.tellp();
		file.write(reinterpret_cast<const char *> (&a),sizeof(a));
		file.close();
	}
	book get(int location){
		
		file.open(F.c_str(),ios::in|ios::out|ios::binary);
		file.seekg(location);
		book a;
		file.read(reinterpret_cast<char *> (&a),sizeof(a));
		file.close();
		return a;
	}
	void init(int flag){
		F="book.txt";
		if(check(F)){
			file.open(F.c_str(),ios::out|ios::binary);
			file.close();
		}
		//file.open(F.c_str(),ios::in|ios::out|ios::binary);
		author_index.initialization((string)("author_index.txt"));
		ISBN_index.initialization((string)("ISBN_index.txt"));
		name_index.initialization((string)("name_index.txt"));
		keyword_index.initialization((string)("keyword_index.txt"));
		now=unknownn;
		select_flag=0;
	}
	void erase(book& a,int flag){//闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁嶉崟顒佹闂佺粯鍔曢顓犵不妤ｅ啯鐓冪憸婊堝礈濮樿鲸宕叉繛鎴欏灩瀹告繃銇勯幘璺哄壉闁告柨顦辩槐鎾存媴閸撴彃鍓板銈忓閺佽鐣峰ú顏勭劦妞ゆ帊闄嶆禍婊堟煙閻戞ê鐏ユい蹇婃櫊閹顫濋澶嬓ч梺闈涙搐鐎氫即鐛€ｎ亖鏀介柛顐ｇ矎濡剧鈹戦悩鎰佸晱闁哥姵顨婇幆鍕敍閻愯尪鎽曢梺鎸庣箓椤︻垱鍎梻渚€娼чˇ顓㈠磿閻戞ê顕遍柍褜鍓熷缁樻媴娓氼垳鍔搁柣鐐村嚬閸嬪﹤鐣峰┑鍡欐殕闁告洖鐏氶弲?
	
		if(flag==0){
			if(isempty(a.ISBN))return ;
			node y=ISBN_index.find(trans(a.ISBN));
			if(y.key!=trans(a.ISBN))throw 1;
			ISBN_index.erase_a_node(y);
			a.ISBN=nullll;
			return ;
		}
		
		
		if(flag==1){//闂傚倸鍊搁崐椋庣矆娓氣偓楠炲鏁嶉崟顒佹闂佺粯鍔曢顓犵不妤ｅ啯鐓冪憸婊堝礈濮樿鲸宕叉繛鎴欏灩瀹告繃銇勯幘璺盒涢柡鈧悷鍓噃or
			if(isempty(a.author))return ;
			node y=author_index.find(trans(a.author));
			a.author=nullll;
			for(int i=1;i<=Top;i++){
				book k=get(Q[i].location);
				if(cmp(k.ISBN,a.ISBN)==0){
					author_index.erase_a_node(Q[i]);
					return ;
				}
			}
			return ;
		}
		if(flag==2){//name
			if(isempty(a.name))return ;
			node y=name_index.find(trans(a.name));
			a.name=nullll;
			for(int i=1;i<=Top;i++){
				book k=get(Q[i].location);
				if(cmp(k.ISBN,a.ISBN)==0){
					name_index.erase_a_node(Q[i]);
					return ;
				}
			}
			return ;
		}
		if(flag==3){//keyword
			if(isempty(a.keyword[1]))return ;
			for(int id=1;id<=29;id++){
				if(cmp(a.keyword[id],nullll)==0)break;
				keyword_index.find(trans(a.keyword[id]));
				a.keyword[id]=nullll;
				for(int i=1;i<=Top;i++){
					book k=get(Q[i].location);
					if(cmp(k.ISBN,a.ISBN)==0){
						keyword_index.erase_a_node(Q[i]);
						break;
					}
				}
			}
			return ;
		}
	}
	
	void select(String& ISBN){
		select_flag=1;
		node b=ISBN_index.find(trans(ISBN));
		if(b.key==trans(ISBN)){
			now=get(b.value);
		}
		else {
			now=unknownn;
			now.ISBN=ISBN;
			foundinend(now);
			ISBN_index.found_a_node(now.ISBN,now.location);
		}
	}
	
	void modify(book& c){
		if(!select_flag)throw 1;
		
		if(c.ISBN_flag){
			node b=ISBN_index.find(trans(c.ISBN));
			if((b.key==trans(c.ISBN)))throw 1;
			
			erase(now,0);
			now.ISBN=c.ISBN;
			ISBN_index.found_a_node(now.ISBN,now.location);
		}
		
		if(c.author_flag){
			erase(now,1);
			now.author=c.author;
			author_index.found_a_node(now.author,now.location);
		}
		if(c.name_flag){
			erase(now,2);
			now.name=c.name;
			name_index.found_a_node(now.name,now.location);
		}
		if(c.keyword_flag){
			erase(now,3);
			for(int i=1;i<=29;i++){
				if(isempty(c.keyword[i]))break;
				now.keyword[i]=c.keyword[i];
				keyword_index.found_a_node(now.keyword[i],now.location);
			}
		}
		if(c.price_flag)
			now.price=c.price;
		updata(now);
		
	}
	void import(int quantity,double cost){
		if(!select_flag)throw 1;
		now.quantity+=quantity;
		updata(now);
		LOG_it.found(cost,0);
	}
	bool checkbook(book& a,book& c){
		if((a.author_flag||c.author_flag)&&cmp(a.author,c.author))return 1;
		if((a.name_flag||c.name_flag)&&cmp(a.name,c.name))return 1;
		if((a.ISBN_flag||c.ISBN_flag)&&cmp(a.ISBN,c.ISBN))return 1;
		return 0;
	}
	void show(book a){
		if(a==unknownn){
			top=0;
			ISBN_index.bianli();
			for(int i=1;i<=Top;i++){
				a=get(Q[i].value);
				q[++top]=a;
			}
			sort(q+1,q+top+1,cmp2);
			for(int i=1;i<=top;i++)
				if(q[i]!=q[i-1])
					q[i].display();
			return ;
		}
		else {
			
			if(a.ISBN_flag){
				node b=ISBN_index.find(trans(a.ISBN));
				if(trans(a.ISBN)!=b.key){return;}
				book c=get(b.value);
				if(!checkbook(a,c))
					c.display();
				return ;
			}
			if(a.author_flag){
				top=0;
				author_index.find(trans(a.author));
				for(int i=1;i<=Top;i++){
					node b=Q[i];
					book c=get(b.value);
					if(!checkbook(c,a))q[++top]=c;
				}
				sort(q+1,q+top+1,cmp2);
				for(int i=1;i<=top;i++){
					if(q[i]!=q[i-1])
						q[i].display();
				}
				return ;
			}
			if(a.name_flag){
				top=0;
				name_index.find(trans(a.name));
				for(int i=1;i<=Top;i++){
					node b=Q[i];
					book c=get(b.value);
					if(!checkbook(c,a))q[++top]=c;
				}
				sort(q+1,q+top+1,cmp2);
				for(int i=1;i<=top;i++){
					if(q[i]!=q[i-1])
						q[i].display();
				}
				return ;
			}
			top=0;
			keyword_index.find(trans(a.keyword[1]));
			for(int i=1;i<=Top;i++){
				node b=Q[i];
				book c=get(b.value);
				if(!checkbook(c,a))q[++top]=c;
			}
			sort(q+1,q+top+1,cmp2);
			for(int i=1;i<=top;i++){
				if(q[i]!=q[i-1]) 
					q[i].display();
			}
			return ;
		}
	}
	void show_finance(int time){
		printf("+ %.2lf - %.2lf\n",LOG_it.find(time).second,LOG_it.find(time).first);
	}
	void buy(String ISBN,int quantity){
		node b=ISBN_index.find(trans(ISBN));
		if(b.key!=trans(ISBN))throw 1;
		book c=get(b.value);
		if(c.quantity<quantity)throw 1;
		c.quantity-=quantity;
		LOG_it.found(quantity*c.price,1);
		updata(c);
	}
}BOOK_it;






void initialization(){
	
	LOG_it.init();
	if(check("ISBN_index.txt")){
		USER_it.init(0);
		BOOK_it.init(0);
		ofstream file("log.txt");
	}
	else {
		USER_it.init(1);
		BOOK_it.init(1);
	}
	
}
void init(){
	initialization();
	string s;
	ifstream check_load("command.txt");
	int flag=0;
	if(!check_load)flag=0;
	else flag=1;
	
	int sum=0;
	while(true){
		sum++;
		if(flag)getline(check_load,s);
		else getline(cin,s);
		if(s.size()==0){continue;}
		INPUT a;
		TYPE aaa=a.input(s);
		String User_id,Passwd,Name,Old_passwd;int pri;
		String ISBN,author,keyword,price;
		book c=unknownn;double cost=0;int quantity=0;int time=0;
	//	cout<<s<<endl;
		if(s=="report finance"){
			while(true){
				fstream file("log.txt",ios::binary|ios::in|ios::out);
				user_node now;String ss;
				while(!file.eof()){
					file.write(reinterpret_cast<char *> (&now),sizeof(now));
					file.write(reinterpret_cast<char *> (&aaa),sizeof(aaa));
					file.write(reinterpret_cast<char *> (&ss),sizeof(ss));
					if(aaa==IMPORT||aaa==BUY)
						printf("%s %s\n",now.name.s+1,ss.s+1);
				}
				break;
			}
			continue;
		}
		if(s=="report employee"||s=="log"){
			fstream file("log.txt",ios::binary|ios::in|ios::out);
			user_node now;String ss;
			while(!file.eof()){
				file.write(reinterpret_cast<char *> (&now),sizeof(now));
				file.write(reinterpret_cast<char *> (&aaa),sizeof(aaa));
				file.write(reinterpret_cast<char *> (&ss),sizeof(ss));
				printf("%s %s\n",now.name.s+1,ss.s+1);
			}
			continue;
		}
		if(s=="report myself"){
			fstream file("log.txt",ios::binary|ios::in|ios::out);
			user_node now;String ss;
			while(!file.eof()){
				file.write(reinterpret_cast<char *> (&now),sizeof(now));
				file.write(reinterpret_cast<char *> (&aaa),sizeof(aaa));
				file.write(reinterpret_cast<char *> (&ss),sizeof(ss));
				if(!cmp(now.user_id,USER_it.now.user_id))printf("%s %s\n",now.name.s+1,ss.s+1);
			}
			continue;
		}
		bool iserror=0;
		try{
		switch (aaa){
			case (EXIT):
				exit(0);
				break;
			case (SU):
				User_id=a.user_id,Passwd=a.passwd;
				USER_it.Su(User_id,Passwd);
				break;
			case (logout):
				if(USER_it.now.pri<1)throw 1;
				USER_it.logout();
				break;
			case (USERADD):
				if(USER_it.now.pri<3)throw 1;
				User_id=a.user_id;Name=a.name;
				Passwd=a.passwd;pri=a.permission;
				USER_it.Useradd(User_id,Passwd,pri,Name);
				break;
			case (REGISTER):
				User_id=a.user_id;Name=a.name;
				Passwd=a.passwd;
				USER_it.Register(User_id,Passwd,Name);
				break;
			case (DELETE):
				if(USER_it.now.pri!=7)throw 1;
				User_id=a.user_id;
				USER_it.Delete(User_id);
				break;
			case (PASSWD):
				if(USER_it.now.pri<1)throw 1;
				User_id=a.user_id;Passwd=a.passwd;Old_passwd=a.old_passwd;
				USER_it.Passwd(User_id,Old_passwd,Passwd);
				break;
			case (SELECT):
				if(USER_it.now.pri<3)throw 1;
				ISBN=a.ISBN;
				BOOK_it.select(ISBN);
				break;
			case (MODIFY):
				if(USER_it.now.pri<3)throw 1;
				c.ISBN=a.ISBN;c.name=a.name;c.author=a.author;
				c.price=a.price;
				c.ISBN_flag=a.ISBN_flag;c.name_flag=a.name_flag;c.author_flag=a.author_flag;
				c.keyword_flag=a.keyword_flag;c.price_flag=a.price_flag;
				for(int i=1;i<30;i++){
					if(a.keyword[i].size()==0)break;
					c.keyword[i]=a.keyword[i];
				}
				BOOK_it.modify(c);
				break;
			case (IMPORT):
				if(USER_it.now.pri<3)throw 1;
				quantity=a.quantity;
				cost=a.cost_price;
				BOOK_it.import(quantity,cost);
				break;
			case SHOW:
				if(USER_it.now.pri==0)throw 1;
				c.author=a.author;
				c.keyword[1]=a.keyword[1];
				c.ISBN=a.ISBN;c.name=a.name;
				c.keyword_flag=a.keyword_flag;
				c.ISBN_flag=a.ISBN_flag;c.name_flag=a.name_flag;c.author_flag=a.author_flag;
				BOOK_it.show(c);
				break;
			case (SHOW_FINANCE):
				if(USER_it.now.pri!=7)throw 1;
				time=a.time;
				BOOK_it.show_finance(time);
				break;
			case (BUY):
				if(USER_it.now.pri==0)throw 1;
				ISBN=a.ISBN;
				quantity=a.quantity;
				BOOK_it.buy(ISBN,quantity);
				break;
			case (WRONG):
				iserror=1;
				printf("Invalid\n");
				//cout<<s<<endl;
				break;
			}
		}
		catch(...){
			iserror=1;
			printf("Invalid\n");
			//cout<<s<<endl;
		}
		if(!iserror){
			fstream file("log.txt",ios::binary|ios::in|ios::out);
			file.seekp(0,ios::end);
			String ss(s);
			file.write(reinterpret_cast<const char *> (&USER_it.now),sizeof(USER_it.now));
			file.write(reinterpret_cast<const char *> (&aaa),sizeof(aaa));
			file.write(reinterpret_cast<const char *> (&ss),sizeof(ss));
		}
	}
	check_load.close();
}
int main(){
	init();
	return 0;
}
